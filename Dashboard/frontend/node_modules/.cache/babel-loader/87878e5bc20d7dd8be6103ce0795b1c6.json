{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js\";\nimport React from \"react\";\nimport { Marker } from \"react-google-maps\"; // import StethoscopeIcon from \"../stethoscopeIcon.png\";\n\nimport dot from \"../image/dot.png\";\nimport { InfoWindow } from 'react-google-maps';\nimport { Table } from 'react-bootstrap';\nexport default class Mark extends React.Component {\n  constructor(props) {\n    super();\n\n    this.onToggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      server: [],\n      chosenHost: \"\"\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  getServiceType(hostName) {\n    if (this.state.server.length === 0) {\n      fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + this.props.hostUri, {\n        headers: {\n          'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          server: data\n        });\n      }).catch(console.log);\n    }\n\n    const serverTable = hostName.hostName.map(server => React.createElement(\"tr\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => {\n        this.props.callback(this.props.hostUri, server);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, server)));\n    return serverTable;\n  }\n\n  chooseHost(hostName, server) {\n    fetch('http://localhost:8080/searchService?hosts=' + hostName + \"&type=\" + server, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        serviceResults: data\n      });\n    }).catch(console.log); // console.log(this.state.serviceResults)\n    // this.props.setState({ serviceVisibility: false });\n\n    document.getElementById(\"informationTabs-tab-second\").click();\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: dot,\n      onClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.props.host), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Server Type\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(this.getServiceType, {\n      hostName: this.state.server,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js"],"names":["React","Marker","dot","InfoWindow","Table","Mark","Component","constructor","props","onToggle","setState","isOpen","state","server","chosenHost","bind","getServiceType","hostName","length","fetch","hostUri","headers","then","res","json","data","catch","console","log","serverTable","map","Math","random","callback","chooseHost","serviceResults","document","getElementById","click","render","location","host"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"../stethoscopeIcon.png\";\nimport dot from \"../image/dot.png\"\nimport { InfoWindow } from 'react-google-maps'\nimport { Table } from 'react-bootstrap'\n\n\nexport default class Mark extends React.Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      isOpen: false,\n      server: [],\n      chosenHost: \"\"\n    }\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  onToggle = () => {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  getServiceType(hostName) {\n    if (this.state.server.length === 0) {\n      fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + this.props.hostUri, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ server: data })\n        })\n        .catch(console.log)\n    }\n    const serverTable = hostName.hostName.map((server) =>\n      <tr key={Math.random()}>\n        <td onClick={() => { this.props.callback(this.props.hostUri, server) }}>{server}</td>\n      </tr>);\n    return serverTable;\n  }\n\n  chooseHost(hostName, server) {\n    fetch('http://localhost:8080/searchService?hosts=' + hostName + \"&type=\" + server, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ serviceResults: data })\n      })\n      .catch(console.log)\n    // console.log(this.state.serviceResults)\n    // this.props.setState({ serviceVisibility: false });\n    \n    document.getElementById(\"informationTabs-tab-second\").click();\n  }\n\n  render() {\n    return (\n      <Marker\n        position={this.props.location}\n        icon={dot}\n        onClick={this.onToggle}\n      >\n        {this.state.isOpen &&\n          <InfoWindow onCloseClick={this.onToggle}>\n            <div><b>{this.props.host}</b>\n              <br></br>\n              <br></br>\n\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Server Type</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <this.getServiceType hostName={this.state.server} ></this.getServiceType>\n                </tbody>\n              </Table>\n              {/* <this.getServiceType hostName={this.props.hostUri} /> */}\n            </div>\n\n          </InfoWindow>}\n      </Marker>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}