{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js\";\nimport React from \"react\";\nimport { Marker } from \"react-google-maps\"; // import StethoscopeIcon from \"../stethoscopeIcon.png\";\n\nimport dot from \"../image/dot.png\";\nimport { InfoWindow } from 'react-google-maps';\nimport { Table } from 'react-bootstrap';\nexport default class Mark extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      server: []\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n    this.displayTable = this.displayTable.bind(this);\n  }\n\n  onToggle(hostName) {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + hostName.hostName, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {// console.log(data);\n      // this.setState({server: data})\n    }).catch(console.log);\n  }\n\n  getServiceType(hostName) {\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + hostName.hostName, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      // console.log(data);\n      this.setState({\n        server: data\n      });\n      return null;\n    }).catch(console.log);\n    return null;\n  }\n\n  displayTable() {\n    const serverTable = this.state.server.map(server => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, server)));\n    return serverTable;\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: dot,\n      onClick: this.onToggle(this.props.hostUri),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.host), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Server Type\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.displayTable)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js"],"names":["React","Marker","dot","InfoWindow","Table","Mark","Component","constructor","state","isOpen","server","onToggle","bind","getServiceType","displayTable","hostName","setState","fetch","headers","then","res","json","data","catch","console","log","serverTable","map","render","props","location","hostUri","host"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"../stethoscopeIcon.png\";\nimport dot from \"../image/dot.png\"\nimport { InfoWindow } from 'react-google-maps'\nimport {  Table } from 'react-bootstrap'\n\n\nexport default class Mark extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      server: []\n    }\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n    this.displayTable = this.displayTable.bind(this);\n  }\n\n  onToggle(hostName) {\n    this.setState({ isOpen: !this.state.isOpen })\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + hostName.hostName, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        // console.log(data);\n        // this.setState({server: data})\n      })\n      .catch(console.log)\n  }\n\n  getServiceType(hostName) {\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + hostName.hostName, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        // console.log(data);\n        this.setState({server: data})\n        return null;\n      })\n      .catch(console.log)\n      return null;\n  }\n\n  displayTable(){\n    const serverTable = this.state.server.map((server) =>\n          <tr>\n            <td>{server}</td>\n          </tr>);\n        return serverTable;\n  }\n  render() {\n    return (\n      <Marker\n        position={this.props.location}\n        icon={dot}\n        onClick={this.onToggle(this.props.hostUri)}\n      >\n        {this.state.isOpen &&\n          <InfoWindow onCloseClick={this.onToggle}>\n            <div><b>{this.props.host}</b>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Server Type</th>\n                  </tr>\n\n                </thead>\n                <tbody>\n                {this.displayTable}\n                </tbody>\n              </Table>\n            </div>\n\n          </InfoWindow>}\n      </Marker>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}