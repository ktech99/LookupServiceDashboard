{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/HostTable.js\";\nimport React from \"react\";\nimport { Button } from 'react-bootstrap';\nexport default class HostTable extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.chooseHost = this.chooseHost.bind(this);\n  }\n\n  getHost(props) {\n    console.log(props);\n    const hostInformation = props.hostInformation;\n    console.log(hostInformation);\n    const hostTable = hostInformation.slice(props.tableStart, props.tableEnd).map(host => React.createElement(\"tr\", {\n      key: host[\"Host Name\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, host[\"Host Name\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, host[\"Hardware\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, host[\"System Info\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, host[\"Toolkit Version\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, host[\"Communities\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, host[\"pSchedulers\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => {\n        this.showHostJSON({\n          host\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"View JSON\"))));\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, hostTable);\n  }\n\n  showHostJSON(host) {\n    console.log(\"\");\n    alert(host[\"host\"][\"JSON\"]);\n  }\n\n  chooseHost(hostName, latitude, longitude) {\n    console.log(\"\");\n    this.props.parentCallBack(hostName, latitude, longitude);\n  }\n\n  render() {\n    return React.createElement(this.getHost, {\n      hostInformation: this.props.hostInformation,\n      parentCallBack: this.props.parentCallBack,\n      tableStart: this.props.tableStart,\n      tableEnd: this.props.tableEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/HostTable.js"],"names":["React","Button","HostTable","PureComponent","constructor","props","chooseHost","bind","getHost","console","log","hostInformation","hostTable","slice","tableStart","tableEnd","map","host","showHostJSON","alert","hostName","latitude","longitude","parentCallBack","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAsB,iBAAtB;AAGA,eAAe,MAAMC,SAAN,SAAwBF,KAAK,CAACG,aAA9B,CAA4C;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AACDC,EAAAA,OAAO,CAACH,KAAD,EAAQ;AACXI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAEA,UAAMM,eAAe,GAAGN,KAAK,CAACM,eAA9B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AACA,UAAMC,SAAS,GAAGD,eAAe,CAACE,KAAhB,CAAsBR,KAAK,CAACS,UAA5B,EAAwCT,KAAK,CAACU,QAA9C,EAAwDC,GAAxD,CAA6DC,IAAD,IAC5E;AAAI,MAAA,GAAG,EAAEA,IAAI,CAAC,WAAD,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKX,UAAL,CAAgBW,IAAI,CAAC,KAAD,CAApB,EAA6BA,IAAI,CAAC,UAAD,CAAjC,EAA+CA,IAAI,CAAC,WAAD,CAAnD;AAAkE,OAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0FA,IAAI,CAAC,WAAD,CAA9F,CADF,EAEE;AAAI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKX,UAAL,CAAgBW,IAAI,CAAC,KAAD,CAApB,EAA6BA,IAAI,CAAC,UAAD,CAAjC,EAA+CA,IAAI,CAAC,WAAD,CAAnD;AAAmE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2FA,IAAI,CAAC,UAAD,CAA/F,CAFF,EAGE;AAAI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKX,UAAL,CAAgBW,IAAI,CAAC,KAAD,CAApB,EAA6BA,IAAI,CAAC,UAAD,CAAjC,EAA+CA,IAAI,CAAC,WAAD,CAAnD;AAAmE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2FA,IAAI,CAAC,aAAD,CAA/F,CAHF,EAIE;AAAI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKX,UAAL,CAAgBW,IAAI,CAAC,KAAD,CAApB,EAA6BA,IAAI,CAAC,UAAD,CAAjC,EAA+CA,IAAI,CAAC,WAAD,CAAnD;AAAmE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2FA,IAAI,CAAC,iBAAD,CAA/F,CAJF,EAKE;AAAI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKX,UAAL,CAAgBW,IAAI,CAAC,KAAD,CAApB,EAA6BA,IAAI,CAAC,UAAD,CAAjC,EAA+CA,IAAI,CAAC,WAAD,CAAnD;AAAmE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2FA,IAAI,CAAC,aAAD,CAA/F,CALF,EAME;AAAI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKX,UAAL,CAAgBW,IAAI,CAAC,KAAD,CAApB,EAA6BA,IAAI,CAAC,UAAD,CAAjC,EAA+CA,IAAI,CAAC,WAAD,CAAnD;AAAmE,OAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2FA,IAAI,CAAC,aAAD,CAA/F,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKC,YAAL,CAAkB;AAAED,UAAAA;AAAF,SAAlB;AAA6B,OAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAJ,CAPF,CADgB,CAAlB;AAWA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGL,SADH,CADF;AAKD;;AAEDM,EAAAA,YAAY,CAACD,IAAD,EAAO;AACjBR,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACAS,IAAAA,KAAK,CAACF,IAAI,CAAC,MAAD,CAAJ,CAAa,MAAb,CAAD,CAAL;AACD;;AAEDX,EAAAA,UAAU,CAACc,QAAD,EAAWC,QAAX,EAAqBC,SAArB,EAAgC;AACxCb,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AACA,SAAKL,KAAL,CAAWkB,cAAX,CAA0BH,QAA1B,EAAoCC,QAApC,EAA8CC,SAA9C;AACD;;AAEHE,EAAAA,MAAM,GAAG;AACL,WACI,yBAAM,OAAN;AAAc,MAAA,eAAe,EAAE,KAAKnB,KAAL,CAAWM,eAA1C;AAA2D,MAAA,cAAc,EAAE,KAAKN,KAAL,CAAWkB,cAAtF;AAAsG,MAAA,UAAU,EAAI,KAAKlB,KAAL,CAAWS,UAA/H;AAA2I,MAAA,QAAQ,EAAG,KAAKT,KAAL,CAAWU,QAAjK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AA3CsD","sourcesContent":["import React from \"react\";\nimport { Button} from 'react-bootstrap'\n\n\nexport default class HostTable extends React.PureComponent {\n\n    constructor(props){\n      super(props);\n      this.chooseHost = this.chooseHost.bind(this);\n    }\n    getHost(props) {\n        console.log(props)\n    \n        const hostInformation = props.hostInformation;\n        console.log(hostInformation)\n        const hostTable = hostInformation.slice(props.tableStart, props.tableEnd).map((host) =>\n          <tr key={host[\"Host Name\"]} >\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"])}}>{host[\"Host Name\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Hardware\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"System Info\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Toolkit Version\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Communities\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"pSchedulers\"]}</td>\n            <td><Button variant=\"warning\" onClick={() => { this.showHostJSON({ host }) }}>View JSON</Button></td>\n          </tr>\n        );\n        return (\n          <tbody>\n            {hostTable}\n          </tbody>\n        );\n      }\n\n      showHostJSON(host) {\n        console.log(\"\")\n        alert(host[\"host\"][\"JSON\"])\n      }\n\n      chooseHost(hostName, latitude, longitude) {\n        console.log(\"\")\n        this.props.parentCallBack(hostName, latitude, longitude);\n      }\n\n    render() {\n        return (\n            <this.getHost hostInformation={this.props.hostInformation} parentCallBack={this.props.parentCallBack} tableStart = {this.props.tableStart} tableEnd= {this.props.tableEnd}/>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}