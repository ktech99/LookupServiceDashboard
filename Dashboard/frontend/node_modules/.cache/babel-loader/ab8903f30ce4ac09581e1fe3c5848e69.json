{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/lookup-service-webui/Dashboard/frontend/src/components/Mark.js\";\nimport React from \"react\";\nimport { Marker } from \"react-google-maps\"; // import StethoscopeIcon from \"../stethoscopeIcon.png\";\n\nimport dot from \"../image/dot.png\";\nimport { InfoWindow } from 'react-google-maps';\nimport { Table } from 'react-bootstrap';\nimport { serverURL, hostURL } from \"./config/config\";\nexport default class Mark extends React.Component {\n  constructor() {\n    super();\n\n    this.onToggle = () => {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    };\n\n    this.state = {\n      isOpen: false,\n      server: [],\n      chosenHost: \"\"\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  getServiceType(hostName) {\n    console.log(this.props.location);\n\n    if (this.state.server.length === 0) {\n      fetch(serverURL + '/getTypeOfServiceHost?hosts=' + this.props.hostUri, {\n        headers: {\n          'Access-Control-Allow-Origin': hostURL\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          server: data\n        });\n      }).catch(console.log);\n    }\n\n    const serverTable = hostName.hostName.map(server => React.createElement(\"tr\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => {\n        this.props.callback(this.props.hostUri, server, this.props.location);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, server)));\n    return serverTable;\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: dot,\n      onClick: this.onToggle,\n      callback: this.props.callback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.host), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Server Type\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(this.getServiceType, {\n      hostName: this.state.server,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/lookup-service-webui/Dashboard/frontend/src/components/Mark.js"],"names":["React","Marker","dot","InfoWindow","Table","serverURL","hostURL","Mark","Component","constructor","onToggle","setState","isOpen","state","server","chosenHost","bind","getServiceType","hostName","console","log","props","location","length","fetch","hostUri","headers","then","res","json","data","catch","serverTable","map","Math","random","callback","render","host"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,iBAAnC;AAIA,eAAe,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAEhDC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,QAXc,GAWH,MAAM;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,CAAC,KAAKC,KAAL,CAAWD;AAAtB,OAAd;AACD,KAba;;AAEZ,SAAKC,KAAL,GAAa;AACXD,MAAAA,MAAM,EAAE,KADG;AAEXE,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKA,SAAKL,QAAL,GAAgB,KAAKA,QAAL,CAAcM,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAMDC,EAAAA,cAAc,CAACC,QAAD,EAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;;AACA,QAAI,KAAKT,KAAL,CAAWC,MAAX,CAAkBS,MAAlB,KAA6B,CAAjC,EAAoC;AAClCC,MAAAA,KAAK,CAACnB,SAAS,GAAG,8BAAZ,GAA6C,KAAKgB,KAAL,CAAWI,OAAzD,EAAkE;AAAEC,QAAAA,OAAO,EAAE;AAAE,yCAA+BpB;AAAjC;AAAX,OAAlE,CAAL,CACGqB,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,aAAKnB,QAAL,CAAc;AAAEG,UAAAA,MAAM,EAAEgB;AAAV,SAAd;AACD,OAJH,EAKGC,KALH,CAKSZ,OAAO,CAACC,GALjB;AAMD;;AACD,UAAMY,WAAW,GAAGd,QAAQ,CAACA,QAAT,CAAkBe,GAAlB,CAAuBnB,MAAD,IACxC;AAAI,MAAA,GAAG,EAAEoB,IAAI,CAACC,MAAL,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKd,KAAL,CAAWe,QAAX,CAAoB,KAAKf,KAAL,CAAWI,OAA/B,EAAwCX,MAAxC,EAAgD,KAAKO,KAAL,CAAWC,QAA3D;AAAsE,OAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8FR,MAA9F,CADF,CADkB,CAApB;AAIA,WAAOkB,WAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWC,QADvB;AAEE,MAAA,IAAI,EAAEpB,GAFR;AAGE,MAAA,OAAO,EAAE,KAAKQ,QAHhB;AAIE,MAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWe,QAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKvB,KAAL,CAAWD,MAAX,IACC,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKF,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKW,KAAL,CAAWiB,IAAf,CAAL,EACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,yBAAM,cAAN;AAAqB,MAAA,QAAQ,EAAE,KAAKzB,KAAL,CAAWC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CAJF,CADF,CAPJ,CADF;AA4BD;;AA/D+C","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"../stethoscopeIcon.png\";\nimport dot from \"../image/dot.png\"\nimport { InfoWindow } from 'react-google-maps'\nimport { Table } from 'react-bootstrap'\nimport { serverURL, hostURL } from \"./config/config\"\n\n\n\nexport default class Mark extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      server: [],\n      chosenHost: \"\"\n    }\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  onToggle = () => {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  getServiceType(hostName) {\n    console.log(this.props.location)\n    if (this.state.server.length === 0) {\n      fetch(serverURL + '/getTypeOfServiceHost?hosts=' + this.props.hostUri, { headers: { 'Access-Control-Allow-Origin': hostURL } })\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ server: data })\n        })\n        .catch(console.log)\n    }\n    const serverTable = hostName.hostName.map((server) =>\n      <tr key={Math.random()}>\n        <td onClick={() => { this.props.callback(this.props.hostUri, server, this.props.location) }}>{server}</td>\n      </tr>);\n    return serverTable;\n  }\n\n  render() {\n    return (\n      <Marker\n        position={this.props.location}\n        icon={dot}\n        onClick={this.onToggle}\n        callback={this.props.callback}\n      >\n        {this.state.isOpen &&\n          <InfoWindow onCloseClick={this.onToggle}>\n            <div><b>{this.props.host}</b>\n              <br></br>\n              <br></br>\n\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Server Type</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <this.getServiceType hostName={this.state.server}></this.getServiceType>\n                </tbody>\n              </Table>\n            </div>\n\n          </InfoWindow>}\n      </Marker>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}