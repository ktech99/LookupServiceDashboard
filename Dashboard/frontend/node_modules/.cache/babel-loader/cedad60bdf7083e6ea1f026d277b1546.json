{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar } from 'react-bootstrap';\nimport { MDBContainer, MDBAutocomplete } from \"mdbreact\";\nconst states = [\"Alabama\", \"Alaska\", \"Arizona\", \"Arkansas\", \"California\", \"Colorado\", \"Connecticut\", \"Delaware\", \"Florida\", \"Georgia\", \"Hawaii\", \"Idaho\", \"Illnois\", \"Indiana\", \"Iowa\", \"Kansas\", \"Kentucky\", \"Louisiana\", \"Maine\", \"Maryland\", \"Massachusetts\", \"Michigan\", \"Minnesota\", \"Mississippi\", \"Missouri\", \"Montana\", \"Nebraska\", \"Nevada\", \"New Hampshire\", \"New Jersey\", \"New Mexico\", \"New York\", \"North Carolina\", \"North Dakota\", \"Ohio\", \"Oklahoma\", \"Oregon\", \"Pennsylvania\", \"Rhode Island\", \"South Carolina\", \"South Dakota\", \"Tennessee\", \"Texas\", \"Utah\", \"Vermont\", \"Virginia\", \"Washington\", \"West Virginia\", \"Wisconsin\", \"Wyoming\"];\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.logValue = value => {\n      console.log(value);\n    };\n\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: [],\n      chosenSchedulers: []\n    };\n    this.getCommunities = this.getCommunities.bind(this);\n    this.getPschedulers = this.getPschedulers.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/groupCommunities', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        groupCommunities: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/pSchedulerTests', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        pSchedulerTests: data\n      });\n    }).catch(console.log);\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map(community => React.createElement(Dropdown.Item, {\n      id: community,\n      key: community,\n      as: Button,\n      onClick: () => {\n        var current = document.getElementById(\"communitiesdropDown\");\n        current.textContent = {\n          community\n        }.community; // changing dropdown name\n\n        this.setState({\n          selectedGroupCommunity: {\n            community\n          }.community\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, community));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, listCommunities);\n  }\n\n  getPschedulers(props) {\n    const pSchedulers = props.pSchedulers;\n    const listSchedulers = pSchedulers.map(scheduler => React.createElement(\"label\", {\n      key: scheduler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"schedulerCheckBox\",\n      id: scheduler,\n      onClick: () => {\n        console.log(this.state.chosenSchedulers);\n        const contains = this.state.chosenSchedulers.includes({\n          scheduler\n        }.scheduler);\n\n        if (contains) {\n          var remainingItems = this.state.chosenSchedulers.filter(function (scheduler) {\n            return scheduler !== {\n              scheduler\n            }.scheduler;\n          });\n          this.setState({\n            chosenSchedulers: remainingItems\n          });\n        } else {\n          this.state.chosenSchedulers.push({\n            scheduler\n          }.scheduler);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), scheduler));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, listSchedulers);\n  }\n\n  render() {\n    return React.createElement(Jumbotron, {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(MDBContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(MDBAutocomplete, {\n      data: states,\n      label: \"Choose your favorite state\",\n      icon: \"heart\",\n      clear: true,\n      id: \"input\",\n      getValue: this.logValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search..\",\n      className: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"communitiesdropDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Group communities\"), React.createElement(this.getCommunities, {\n      communities: this.state.groupCommunities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"pScheduler Tests\"), React.createElement(this.getPschedulers, {\n      pSchedulers: this.state.pSchedulerTests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/App.js"],"names":["React","Component","logo","Jumbotron","Button","ListGroup","Dropdown","ButtonToolbar","MDBContainer","MDBAutocomplete","states","App","constructor","logValue","value","console","log","state","groupCommunities","selectedGroupCommunity","pSchedulerTests","chosenSchedulers","getCommunities","bind","getPschedulers","componentDidMount","fetch","headers","then","res","json","data","setState","catch","props","communities","listCommunities","map","community","current","document","getElementById","textContent","pSchedulers","listSchedulers","scheduler","contains","includes","remainingItems","filter","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar } from 'react-bootstrap';\nimport { MDBContainer, MDBAutocomplete } from \"mdbreact\";\n\n\nconst states = [\n  \"Alabama\",\n  \"Alaska\",\n  \"Arizona\",\n  \"Arkansas\",\n  \"California\",\n  \"Colorado\",\n  \"Connecticut\",\n  \"Delaware\",\n  \"Florida\",\n  \"Georgia\",\n  \"Hawaii\",\n  \"Idaho\",\n  \"Illnois\",\n  \"Indiana\",\n  \"Iowa\",\n  \"Kansas\",\n  \"Kentucky\",\n  \"Louisiana\",\n  \"Maine\",\n  \"Maryland\",\n  \"Massachusetts\",\n  \"Michigan\",\n  \"Minnesota\",\n  \"Mississippi\",\n  \"Missouri\",\n  \"Montana\",\n  \"Nebraska\",\n  \"Nevada\",\n  \"New Hampshire\",\n  \"New Jersey\",\n  \"New Mexico\",\n  \"New York\",\n  \"North Carolina\",\n  \"North Dakota\",\n  \"Ohio\",\n  \"Oklahoma\",\n  \"Oregon\",\n  \"Pennsylvania\",\n  \"Rhode Island\",\n  \"South Carolina\",\n  \"South Dakota\",\n  \"Tennessee\",\n  \"Texas\",\n  \"Utah\",\n  \"Vermont\",\n  \"Virginia\",\n  \"Washington\",\n  \"West Virginia\",\n  \"Wisconsin\",\n  \"Wyoming\"\n];\n\nclass App extends Component {\n\n  \n  constructor() {\n    super();\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: [],\n      chosenSchedulers: []\n    }\n    this.getCommunities = this.getCommunities.bind(this);\n    this.getPschedulers = this.getPschedulers.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/groupCommunities', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ groupCommunities: data })\n      })\n      .catch(console.log)\n\n    fetch('http://localhost:8080/pSchedulerTests', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ pSchedulerTests: data })\n      })\n      .catch(console.log)\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map((community) =>\n      <Dropdown.Item  id = {community} key= {community} as={Button}  \n      onClick={() => { \n        var current = document.getElementById(\"communitiesdropDown\");\n        current.textContent = {community}.community; // changing dropdown name\n        this.setState({selectedGroupCommunity : {community}.community})\n       }}>\n        {/* todo onclick */}\n        {community}\n      \n      </Dropdown.Item>\n    );\n    return (\n      <Dropdown.Menu className=\"scrollBox\">{listCommunities}</Dropdown.Menu>\n    );\n  }\n\n  getPschedulers(props) {\n    const pSchedulers = props.pSchedulers;\n    const listSchedulers = pSchedulers.map((scheduler) =>\n    <label key={scheduler}>\n      <input type=\"checkbox\" className=\"schedulerCheckBox\" id = {scheduler} onClick={() => { \n        console.log(this.state.chosenSchedulers);\n        const contains = this.state.chosenSchedulers.includes({scheduler}.scheduler);\n        if(contains){\n          var remainingItems = this.state.chosenSchedulers.filter(function(scheduler) { return scheduler !== {scheduler}.scheduler });\n          this.setState({chosenSchedulers: remainingItems });\n        }else{\n          this.state.chosenSchedulers.push({scheduler}.scheduler)\n        } \n\n       }}> \n       </input>\n      {scheduler}\n    </label>\n    );\n    return (\n      <Dropdown.Menu className=\"scrollBox\">\n        {listSchedulers}\n      </Dropdown.Menu>\n    );\n  }\n\n  logValue = value => {\n    console.log(value);\n  };\n\n  render() {\n    return (\n      <Jumbotron className=\"head\">\n        <div>\n        <MDBContainer>\n        <MDBAutocomplete\n          data={states}\n          label=\"Choose your favorite state\"\n          icon=\"heart\"\n          clear\n          id=\"input\"\n          getValue={this.logValue}\n        />\n      </MDBContainer>\n          {/* <input type=\"text\" placeholder=\"Field Name..\" className=\"searchBarField\" /> */}\n          <input type=\"text\" placeholder=\"Search..\" className=\"searchBar\" />\n        </div>\n        <div className=\"dropdownDiv\">\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"communitiesdropDown\">\n              Group communities\n            </Dropdown.Toggle>\n            <this.getCommunities communities={this.state.groupCommunities} />\n          </Dropdown>\n\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n              pScheduler Tests\n            </Dropdown.Toggle>\n\n            <this.getPschedulers pSchedulers = {this.state.pSchedulerTests}/>\n\n          </Dropdown>\n        </div>\n        <div className=\"submitButton\">\n          <Button variant=\"warning\">Submit</Button>\n        </div>\n      </Jumbotron>\n    );\n  }\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}