{"ast":null,"code":"// Licensed to Elasticsearch B.V under one or more agreements.\n// Elasticsearch B.V licenses this file to you under the Apache 2.0 License.\n// See the LICENSE file in the project root for more information\n'use strict';\n\nconst assert = require('assert');\n\nfunction ESAPI(opts) {\n  assert(opts.makeRequest, 'Missing makeRequest function');\n  assert(opts.ConfigurationError, 'Missing ConfigurationError class');\n  assert(opts.result, 'Missing default result object');\n  const result = opts.result;\n  opts.handleError = handleError;\n  opts.snakeCaseKeys = snakeCaseKeys;\n  const apis = {\n    bulk: lazyLoad('bulk', opts),\n    cat: {\n      aliases: lazyLoad('cat.aliases', opts),\n      allocation: lazyLoad('cat.allocation', opts),\n      count: lazyLoad('cat.count', opts),\n      fielddata: lazyLoad('cat.fielddata', opts),\n      health: lazyLoad('cat.health', opts),\n      help: lazyLoad('cat.help', opts),\n      indices: lazyLoad('cat.indices', opts),\n      master: lazyLoad('cat.master', opts),\n      nodeattrs: lazyLoad('cat.nodeattrs', opts),\n      nodes: lazyLoad('cat.nodes', opts),\n      pending_tasks: lazyLoad('cat.pending_tasks', opts),\n      pendingTasks: lazyLoad('cat.pending_tasks', opts),\n      plugins: lazyLoad('cat.plugins', opts),\n      recovery: lazyLoad('cat.recovery', opts),\n      repositories: lazyLoad('cat.repositories', opts),\n      segments: lazyLoad('cat.segments', opts),\n      shards: lazyLoad('cat.shards', opts),\n      snapshots: lazyLoad('cat.snapshots', opts),\n      tasks: lazyLoad('cat.tasks', opts),\n      templates: lazyLoad('cat.templates', opts),\n      thread_pool: lazyLoad('cat.thread_pool', opts),\n      threadPool: lazyLoad('cat.thread_pool', opts)\n    },\n    ccr: {\n      delete_auto_follow_pattern: lazyLoad('ccr.delete_auto_follow_pattern', opts),\n      deleteAutoFollowPattern: lazyLoad('ccr.delete_auto_follow_pattern', opts),\n      follow: lazyLoad('ccr.follow', opts),\n      follow_info: lazyLoad('ccr.follow_info', opts),\n      followInfo: lazyLoad('ccr.follow_info', opts),\n      follow_stats: lazyLoad('ccr.follow_stats', opts),\n      followStats: lazyLoad('ccr.follow_stats', opts),\n      forget_follower: lazyLoad('ccr.forget_follower', opts),\n      forgetFollower: lazyLoad('ccr.forget_follower', opts),\n      get_auto_follow_pattern: lazyLoad('ccr.get_auto_follow_pattern', opts),\n      getAutoFollowPattern: lazyLoad('ccr.get_auto_follow_pattern', opts),\n      pause_follow: lazyLoad('ccr.pause_follow', opts),\n      pauseFollow: lazyLoad('ccr.pause_follow', opts),\n      put_auto_follow_pattern: lazyLoad('ccr.put_auto_follow_pattern', opts),\n      putAutoFollowPattern: lazyLoad('ccr.put_auto_follow_pattern', opts),\n      resume_follow: lazyLoad('ccr.resume_follow', opts),\n      resumeFollow: lazyLoad('ccr.resume_follow', opts),\n      stats: lazyLoad('ccr.stats', opts),\n      unfollow: lazyLoad('ccr.unfollow', opts)\n    },\n    clear_scroll: lazyLoad('clear_scroll', opts),\n    clearScroll: lazyLoad('clear_scroll', opts),\n    cluster: {\n      allocation_explain: lazyLoad('cluster.allocation_explain', opts),\n      allocationExplain: lazyLoad('cluster.allocation_explain', opts),\n      get_settings: lazyLoad('cluster.get_settings', opts),\n      getSettings: lazyLoad('cluster.get_settings', opts),\n      health: lazyLoad('cluster.health', opts),\n      pending_tasks: lazyLoad('cluster.pending_tasks', opts),\n      pendingTasks: lazyLoad('cluster.pending_tasks', opts),\n      put_settings: lazyLoad('cluster.put_settings', opts),\n      putSettings: lazyLoad('cluster.put_settings', opts),\n      remote_info: lazyLoad('cluster.remote_info', opts),\n      remoteInfo: lazyLoad('cluster.remote_info', opts),\n      reroute: lazyLoad('cluster.reroute', opts),\n      state: lazyLoad('cluster.state', opts),\n      stats: lazyLoad('cluster.stats', opts)\n    },\n    count: lazyLoad('count', opts),\n    create: lazyLoad('create', opts),\n    data_frame: {\n      delete_data_frame_transform: lazyLoad('data_frame.delete_data_frame_transform', opts),\n      deleteDataFrameTransform: lazyLoad('data_frame.delete_data_frame_transform', opts),\n      get_data_frame_transform: lazyLoad('data_frame.get_data_frame_transform', opts),\n      getDataFrameTransform: lazyLoad('data_frame.get_data_frame_transform', opts),\n      get_data_frame_transform_stats: lazyLoad('data_frame.get_data_frame_transform_stats', opts),\n      getDataFrameTransformStats: lazyLoad('data_frame.get_data_frame_transform_stats', opts),\n      preview_data_frame_transform: lazyLoad('data_frame.preview_data_frame_transform', opts),\n      previewDataFrameTransform: lazyLoad('data_frame.preview_data_frame_transform', opts),\n      put_data_frame_transform: lazyLoad('data_frame.put_data_frame_transform', opts),\n      putDataFrameTransform: lazyLoad('data_frame.put_data_frame_transform', opts),\n      start_data_frame_transform: lazyLoad('data_frame.start_data_frame_transform', opts),\n      startDataFrameTransform: lazyLoad('data_frame.start_data_frame_transform', opts),\n      stop_data_frame_transform: lazyLoad('data_frame.stop_data_frame_transform', opts),\n      stopDataFrameTransform: lazyLoad('data_frame.stop_data_frame_transform', opts)\n    },\n    dataFrame: {\n      delete_data_frame_transform: lazyLoad('data_frame.delete_data_frame_transform', opts),\n      deleteDataFrameTransform: lazyLoad('data_frame.delete_data_frame_transform', opts),\n      get_data_frame_transform: lazyLoad('data_frame.get_data_frame_transform', opts),\n      getDataFrameTransform: lazyLoad('data_frame.get_data_frame_transform', opts),\n      get_data_frame_transform_stats: lazyLoad('data_frame.get_data_frame_transform_stats', opts),\n      getDataFrameTransformStats: lazyLoad('data_frame.get_data_frame_transform_stats', opts),\n      preview_data_frame_transform: lazyLoad('data_frame.preview_data_frame_transform', opts),\n      previewDataFrameTransform: lazyLoad('data_frame.preview_data_frame_transform', opts),\n      put_data_frame_transform: lazyLoad('data_frame.put_data_frame_transform', opts),\n      putDataFrameTransform: lazyLoad('data_frame.put_data_frame_transform', opts),\n      start_data_frame_transform: lazyLoad('data_frame.start_data_frame_transform', opts),\n      startDataFrameTransform: lazyLoad('data_frame.start_data_frame_transform', opts),\n      stop_data_frame_transform: lazyLoad('data_frame.stop_data_frame_transform', opts),\n      stopDataFrameTransform: lazyLoad('data_frame.stop_data_frame_transform', opts)\n    },\n    delete: lazyLoad('delete', opts),\n    delete_by_query: lazyLoad('delete_by_query', opts),\n    deleteByQuery: lazyLoad('delete_by_query', opts),\n    delete_by_query_rethrottle: lazyLoad('delete_by_query_rethrottle', opts),\n    deleteByQueryRethrottle: lazyLoad('delete_by_query_rethrottle', opts),\n    delete_script: lazyLoad('delete_script', opts),\n    deleteScript: lazyLoad('delete_script', opts),\n    exists: lazyLoad('exists', opts),\n    exists_source: lazyLoad('exists_source', opts),\n    existsSource: lazyLoad('exists_source', opts),\n    explain: lazyLoad('explain', opts),\n    field_caps: lazyLoad('field_caps', opts),\n    fieldCaps: lazyLoad('field_caps', opts),\n    get: lazyLoad('get', opts),\n    get_script: lazyLoad('get_script', opts),\n    getScript: lazyLoad('get_script', opts),\n    get_source: lazyLoad('get_source', opts),\n    getSource: lazyLoad('get_source', opts),\n    graph: {\n      explore: lazyLoad('graph.explore', opts)\n    },\n    ilm: {\n      delete_lifecycle: lazyLoad('ilm.delete_lifecycle', opts),\n      deleteLifecycle: lazyLoad('ilm.delete_lifecycle', opts),\n      explain_lifecycle: lazyLoad('ilm.explain_lifecycle', opts),\n      explainLifecycle: lazyLoad('ilm.explain_lifecycle', opts),\n      get_lifecycle: lazyLoad('ilm.get_lifecycle', opts),\n      getLifecycle: lazyLoad('ilm.get_lifecycle', opts),\n      get_status: lazyLoad('ilm.get_status', opts),\n      getStatus: lazyLoad('ilm.get_status', opts),\n      move_to_step: lazyLoad('ilm.move_to_step', opts),\n      moveToStep: lazyLoad('ilm.move_to_step', opts),\n      put_lifecycle: lazyLoad('ilm.put_lifecycle', opts),\n      putLifecycle: lazyLoad('ilm.put_lifecycle', opts),\n      remove_policy: lazyLoad('ilm.remove_policy', opts),\n      removePolicy: lazyLoad('ilm.remove_policy', opts),\n      retry: lazyLoad('ilm.retry', opts),\n      start: lazyLoad('ilm.start', opts),\n      stop: lazyLoad('ilm.stop', opts)\n    },\n    index: lazyLoad('index', opts),\n    indices: {\n      analyze: lazyLoad('indices.analyze', opts),\n      clear_cache: lazyLoad('indices.clear_cache', opts),\n      clearCache: lazyLoad('indices.clear_cache', opts),\n      close: lazyLoad('indices.close', opts),\n      create: lazyLoad('indices.create', opts),\n      delete: lazyLoad('indices.delete', opts),\n      delete_alias: lazyLoad('indices.delete_alias', opts),\n      deleteAlias: lazyLoad('indices.delete_alias', opts),\n      delete_template: lazyLoad('indices.delete_template', opts),\n      deleteTemplate: lazyLoad('indices.delete_template', opts),\n      exists: lazyLoad('indices.exists', opts),\n      exists_alias: lazyLoad('indices.exists_alias', opts),\n      existsAlias: lazyLoad('indices.exists_alias', opts),\n      exists_template: lazyLoad('indices.exists_template', opts),\n      existsTemplate: lazyLoad('indices.exists_template', opts),\n      exists_type: lazyLoad('indices.exists_type', opts),\n      existsType: lazyLoad('indices.exists_type', opts),\n      flush: lazyLoad('indices.flush', opts),\n      flush_synced: lazyLoad('indices.flush_synced', opts),\n      flushSynced: lazyLoad('indices.flush_synced', opts),\n      forcemerge: lazyLoad('indices.forcemerge', opts),\n      freeze: lazyLoad('indices.freeze', opts),\n      get: lazyLoad('indices.get', opts),\n      get_alias: lazyLoad('indices.get_alias', opts),\n      getAlias: lazyLoad('indices.get_alias', opts),\n      get_field_mapping: lazyLoad('indices.get_field_mapping', opts),\n      getFieldMapping: lazyLoad('indices.get_field_mapping', opts),\n      get_mapping: lazyLoad('indices.get_mapping', opts),\n      getMapping: lazyLoad('indices.get_mapping', opts),\n      get_settings: lazyLoad('indices.get_settings', opts),\n      getSettings: lazyLoad('indices.get_settings', opts),\n      get_template: lazyLoad('indices.get_template', opts),\n      getTemplate: lazyLoad('indices.get_template', opts),\n      get_upgrade: lazyLoad('indices.get_upgrade', opts),\n      getUpgrade: lazyLoad('indices.get_upgrade', opts),\n      open: lazyLoad('indices.open', opts),\n      put_alias: lazyLoad('indices.put_alias', opts),\n      putAlias: lazyLoad('indices.put_alias', opts),\n      put_mapping: lazyLoad('indices.put_mapping', opts),\n      putMapping: lazyLoad('indices.put_mapping', opts),\n      put_settings: lazyLoad('indices.put_settings', opts),\n      putSettings: lazyLoad('indices.put_settings', opts),\n      put_template: lazyLoad('indices.put_template', opts),\n      putTemplate: lazyLoad('indices.put_template', opts),\n      recovery: lazyLoad('indices.recovery', opts),\n      refresh: lazyLoad('indices.refresh', opts),\n      reload_search_analyzers: lazyLoad('indices.reload_search_analyzers', opts),\n      reloadSearchAnalyzers: lazyLoad('indices.reload_search_analyzers', opts),\n      rollover: lazyLoad('indices.rollover', opts),\n      segments: lazyLoad('indices.segments', opts),\n      shard_stores: lazyLoad('indices.shard_stores', opts),\n      shardStores: lazyLoad('indices.shard_stores', opts),\n      shrink: lazyLoad('indices.shrink', opts),\n      split: lazyLoad('indices.split', opts),\n      stats: lazyLoad('indices.stats', opts),\n      unfreeze: lazyLoad('indices.unfreeze', opts),\n      update_aliases: lazyLoad('indices.update_aliases', opts),\n      updateAliases: lazyLoad('indices.update_aliases', opts),\n      upgrade: lazyLoad('indices.upgrade', opts),\n      validate_query: lazyLoad('indices.validate_query', opts),\n      validateQuery: lazyLoad('indices.validate_query', opts)\n    },\n    info: lazyLoad('info', opts),\n    ingest: {\n      delete_pipeline: lazyLoad('ingest.delete_pipeline', opts),\n      deletePipeline: lazyLoad('ingest.delete_pipeline', opts),\n      get_pipeline: lazyLoad('ingest.get_pipeline', opts),\n      getPipeline: lazyLoad('ingest.get_pipeline', opts),\n      processor_grok: lazyLoad('ingest.processor_grok', opts),\n      processorGrok: lazyLoad('ingest.processor_grok', opts),\n      put_pipeline: lazyLoad('ingest.put_pipeline', opts),\n      putPipeline: lazyLoad('ingest.put_pipeline', opts),\n      simulate: lazyLoad('ingest.simulate', opts)\n    },\n    license: {\n      delete: lazyLoad('license.delete', opts),\n      get: lazyLoad('license.get', opts),\n      get_basic_status: lazyLoad('license.get_basic_status', opts),\n      getBasicStatus: lazyLoad('license.get_basic_status', opts),\n      get_trial_status: lazyLoad('license.get_trial_status', opts),\n      getTrialStatus: lazyLoad('license.get_trial_status', opts),\n      post: lazyLoad('license.post', opts),\n      post_start_basic: lazyLoad('license.post_start_basic', opts),\n      postStartBasic: lazyLoad('license.post_start_basic', opts),\n      post_start_trial: lazyLoad('license.post_start_trial', opts),\n      postStartTrial: lazyLoad('license.post_start_trial', opts)\n    },\n    mget: lazyLoad('mget', opts),\n    migration: {\n      deprecations: lazyLoad('migration.deprecations', opts)\n    },\n    ml: {\n      close_job: lazyLoad('ml.close_job', opts),\n      closeJob: lazyLoad('ml.close_job', opts),\n      delete_calendar: lazyLoad('ml.delete_calendar', opts),\n      deleteCalendar: lazyLoad('ml.delete_calendar', opts),\n      delete_calendar_event: lazyLoad('ml.delete_calendar_event', opts),\n      deleteCalendarEvent: lazyLoad('ml.delete_calendar_event', opts),\n      delete_calendar_job: lazyLoad('ml.delete_calendar_job', opts),\n      deleteCalendarJob: lazyLoad('ml.delete_calendar_job', opts),\n      delete_data_frame_analytics: lazyLoad('ml.delete_data_frame_analytics', opts),\n      deleteDataFrameAnalytics: lazyLoad('ml.delete_data_frame_analytics', opts),\n      delete_datafeed: lazyLoad('ml.delete_datafeed', opts),\n      deleteDatafeed: lazyLoad('ml.delete_datafeed', opts),\n      delete_expired_data: lazyLoad('ml.delete_expired_data', opts),\n      deleteExpiredData: lazyLoad('ml.delete_expired_data', opts),\n      delete_filter: lazyLoad('ml.delete_filter', opts),\n      deleteFilter: lazyLoad('ml.delete_filter', opts),\n      delete_forecast: lazyLoad('ml.delete_forecast', opts),\n      deleteForecast: lazyLoad('ml.delete_forecast', opts),\n      delete_job: lazyLoad('ml.delete_job', opts),\n      deleteJob: lazyLoad('ml.delete_job', opts),\n      delete_model_snapshot: lazyLoad('ml.delete_model_snapshot', opts),\n      deleteModelSnapshot: lazyLoad('ml.delete_model_snapshot', opts),\n      evaluate_data_frame: lazyLoad('ml.evaluate_data_frame', opts),\n      evaluateDataFrame: lazyLoad('ml.evaluate_data_frame', opts),\n      find_file_structure: lazyLoad('ml.find_file_structure', opts),\n      findFileStructure: lazyLoad('ml.find_file_structure', opts),\n      flush_job: lazyLoad('ml.flush_job', opts),\n      flushJob: lazyLoad('ml.flush_job', opts),\n      forecast: lazyLoad('ml.forecast', opts),\n      get_buckets: lazyLoad('ml.get_buckets', opts),\n      getBuckets: lazyLoad('ml.get_buckets', opts),\n      get_calendar_events: lazyLoad('ml.get_calendar_events', opts),\n      getCalendarEvents: lazyLoad('ml.get_calendar_events', opts),\n      get_calendars: lazyLoad('ml.get_calendars', opts),\n      getCalendars: lazyLoad('ml.get_calendars', opts),\n      get_categories: lazyLoad('ml.get_categories', opts),\n      getCategories: lazyLoad('ml.get_categories', opts),\n      get_data_frame_analytics: lazyLoad('ml.get_data_frame_analytics', opts),\n      getDataFrameAnalytics: lazyLoad('ml.get_data_frame_analytics', opts),\n      get_data_frame_analytics_stats: lazyLoad('ml.get_data_frame_analytics_stats', opts),\n      getDataFrameAnalyticsStats: lazyLoad('ml.get_data_frame_analytics_stats', opts),\n      get_datafeed_stats: lazyLoad('ml.get_datafeed_stats', opts),\n      getDatafeedStats: lazyLoad('ml.get_datafeed_stats', opts),\n      get_datafeeds: lazyLoad('ml.get_datafeeds', opts),\n      getDatafeeds: lazyLoad('ml.get_datafeeds', opts),\n      get_filters: lazyLoad('ml.get_filters', opts),\n      getFilters: lazyLoad('ml.get_filters', opts),\n      get_influencers: lazyLoad('ml.get_influencers', opts),\n      getInfluencers: lazyLoad('ml.get_influencers', opts),\n      get_job_stats: lazyLoad('ml.get_job_stats', opts),\n      getJobStats: lazyLoad('ml.get_job_stats', opts),\n      get_jobs: lazyLoad('ml.get_jobs', opts),\n      getJobs: lazyLoad('ml.get_jobs', opts),\n      get_model_snapshots: lazyLoad('ml.get_model_snapshots', opts),\n      getModelSnapshots: lazyLoad('ml.get_model_snapshots', opts),\n      get_overall_buckets: lazyLoad('ml.get_overall_buckets', opts),\n      getOverallBuckets: lazyLoad('ml.get_overall_buckets', opts),\n      get_records: lazyLoad('ml.get_records', opts),\n      getRecords: lazyLoad('ml.get_records', opts),\n      info: lazyLoad('ml.info', opts),\n      open_job: lazyLoad('ml.open_job', opts),\n      openJob: lazyLoad('ml.open_job', opts),\n      post_calendar_events: lazyLoad('ml.post_calendar_events', opts),\n      postCalendarEvents: lazyLoad('ml.post_calendar_events', opts),\n      post_data: lazyLoad('ml.post_data', opts),\n      postData: lazyLoad('ml.post_data', opts),\n      preview_datafeed: lazyLoad('ml.preview_datafeed', opts),\n      previewDatafeed: lazyLoad('ml.preview_datafeed', opts),\n      put_calendar: lazyLoad('ml.put_calendar', opts),\n      putCalendar: lazyLoad('ml.put_calendar', opts),\n      put_calendar_job: lazyLoad('ml.put_calendar_job', opts),\n      putCalendarJob: lazyLoad('ml.put_calendar_job', opts),\n      put_data_frame_analytics: lazyLoad('ml.put_data_frame_analytics', opts),\n      putDataFrameAnalytics: lazyLoad('ml.put_data_frame_analytics', opts),\n      put_datafeed: lazyLoad('ml.put_datafeed', opts),\n      putDatafeed: lazyLoad('ml.put_datafeed', opts),\n      put_filter: lazyLoad('ml.put_filter', opts),\n      putFilter: lazyLoad('ml.put_filter', opts),\n      put_job: lazyLoad('ml.put_job', opts),\n      putJob: lazyLoad('ml.put_job', opts),\n      revert_model_snapshot: lazyLoad('ml.revert_model_snapshot', opts),\n      revertModelSnapshot: lazyLoad('ml.revert_model_snapshot', opts),\n      set_upgrade_mode: lazyLoad('ml.set_upgrade_mode', opts),\n      setUpgradeMode: lazyLoad('ml.set_upgrade_mode', opts),\n      start_data_frame_analytics: lazyLoad('ml.start_data_frame_analytics', opts),\n      startDataFrameAnalytics: lazyLoad('ml.start_data_frame_analytics', opts),\n      start_datafeed: lazyLoad('ml.start_datafeed', opts),\n      startDatafeed: lazyLoad('ml.start_datafeed', opts),\n      stop_data_frame_analytics: lazyLoad('ml.stop_data_frame_analytics', opts),\n      stopDataFrameAnalytics: lazyLoad('ml.stop_data_frame_analytics', opts),\n      stop_datafeed: lazyLoad('ml.stop_datafeed', opts),\n      stopDatafeed: lazyLoad('ml.stop_datafeed', opts),\n      update_datafeed: lazyLoad('ml.update_datafeed', opts),\n      updateDatafeed: lazyLoad('ml.update_datafeed', opts),\n      update_filter: lazyLoad('ml.update_filter', opts),\n      updateFilter: lazyLoad('ml.update_filter', opts),\n      update_job: lazyLoad('ml.update_job', opts),\n      updateJob: lazyLoad('ml.update_job', opts),\n      update_model_snapshot: lazyLoad('ml.update_model_snapshot', opts),\n      updateModelSnapshot: lazyLoad('ml.update_model_snapshot', opts),\n      validate: lazyLoad('ml.validate', opts),\n      validate_detector: lazyLoad('ml.validate_detector', opts),\n      validateDetector: lazyLoad('ml.validate_detector', opts)\n    },\n    monitoring: {\n      bulk: lazyLoad('monitoring.bulk', opts)\n    },\n    msearch: lazyLoad('msearch', opts),\n    msearch_template: lazyLoad('msearch_template', opts),\n    msearchTemplate: lazyLoad('msearch_template', opts),\n    mtermvectors: lazyLoad('mtermvectors', opts),\n    nodes: {\n      hot_threads: lazyLoad('nodes.hot_threads', opts),\n      hotThreads: lazyLoad('nodes.hot_threads', opts),\n      info: lazyLoad('nodes.info', opts),\n      reload_secure_settings: lazyLoad('nodes.reload_secure_settings', opts),\n      reloadSecureSettings: lazyLoad('nodes.reload_secure_settings', opts),\n      stats: lazyLoad('nodes.stats', opts),\n      usage: lazyLoad('nodes.usage', opts)\n    },\n    ping: lazyLoad('ping', opts),\n    put_script: lazyLoad('put_script', opts),\n    putScript: lazyLoad('put_script', opts),\n    rank_eval: lazyLoad('rank_eval', opts),\n    rankEval: lazyLoad('rank_eval', opts),\n    reindex: lazyLoad('reindex', opts),\n    reindex_rethrottle: lazyLoad('reindex_rethrottle', opts),\n    reindexRethrottle: lazyLoad('reindex_rethrottle', opts),\n    render_search_template: lazyLoad('render_search_template', opts),\n    renderSearchTemplate: lazyLoad('render_search_template', opts),\n    rollup: {\n      delete_job: lazyLoad('rollup.delete_job', opts),\n      deleteJob: lazyLoad('rollup.delete_job', opts),\n      get_jobs: lazyLoad('rollup.get_jobs', opts),\n      getJobs: lazyLoad('rollup.get_jobs', opts),\n      get_rollup_caps: lazyLoad('rollup.get_rollup_caps', opts),\n      getRollupCaps: lazyLoad('rollup.get_rollup_caps', opts),\n      get_rollup_index_caps: lazyLoad('rollup.get_rollup_index_caps', opts),\n      getRollupIndexCaps: lazyLoad('rollup.get_rollup_index_caps', opts),\n      put_job: lazyLoad('rollup.put_job', opts),\n      putJob: lazyLoad('rollup.put_job', opts),\n      rollup_search: lazyLoad('rollup.rollup_search', opts),\n      rollupSearch: lazyLoad('rollup.rollup_search', opts),\n      start_job: lazyLoad('rollup.start_job', opts),\n      startJob: lazyLoad('rollup.start_job', opts),\n      stop_job: lazyLoad('rollup.stop_job', opts),\n      stopJob: lazyLoad('rollup.stop_job', opts)\n    },\n    scripts_painless_execute: lazyLoad('scripts_painless_execute', opts),\n    scriptsPainlessExecute: lazyLoad('scripts_painless_execute', opts),\n    scroll: lazyLoad('scroll', opts),\n    search: lazyLoad('search', opts),\n    search_shards: lazyLoad('search_shards', opts),\n    searchShards: lazyLoad('search_shards', opts),\n    search_template: lazyLoad('search_template', opts),\n    searchTemplate: lazyLoad('search_template', opts),\n    security: {\n      authenticate: lazyLoad('security.authenticate', opts),\n      change_password: lazyLoad('security.change_password', opts),\n      changePassword: lazyLoad('security.change_password', opts),\n      clear_cached_realms: lazyLoad('security.clear_cached_realms', opts),\n      clearCachedRealms: lazyLoad('security.clear_cached_realms', opts),\n      clear_cached_roles: lazyLoad('security.clear_cached_roles', opts),\n      clearCachedRoles: lazyLoad('security.clear_cached_roles', opts),\n      create_api_key: lazyLoad('security.create_api_key', opts),\n      createApiKey: lazyLoad('security.create_api_key', opts),\n      delete_privileges: lazyLoad('security.delete_privileges', opts),\n      deletePrivileges: lazyLoad('security.delete_privileges', opts),\n      delete_role: lazyLoad('security.delete_role', opts),\n      deleteRole: lazyLoad('security.delete_role', opts),\n      delete_role_mapping: lazyLoad('security.delete_role_mapping', opts),\n      deleteRoleMapping: lazyLoad('security.delete_role_mapping', opts),\n      delete_user: lazyLoad('security.delete_user', opts),\n      deleteUser: lazyLoad('security.delete_user', opts),\n      disable_user: lazyLoad('security.disable_user', opts),\n      disableUser: lazyLoad('security.disable_user', opts),\n      enable_user: lazyLoad('security.enable_user', opts),\n      enableUser: lazyLoad('security.enable_user', opts),\n      get_api_key: lazyLoad('security.get_api_key', opts),\n      getApiKey: lazyLoad('security.get_api_key', opts),\n      get_builtin_privileges: lazyLoad('security.get_builtin_privileges', opts),\n      getBuiltinPrivileges: lazyLoad('security.get_builtin_privileges', opts),\n      get_privileges: lazyLoad('security.get_privileges', opts),\n      getPrivileges: lazyLoad('security.get_privileges', opts),\n      get_role: lazyLoad('security.get_role', opts),\n      getRole: lazyLoad('security.get_role', opts),\n      get_role_mapping: lazyLoad('security.get_role_mapping', opts),\n      getRoleMapping: lazyLoad('security.get_role_mapping', opts),\n      get_token: lazyLoad('security.get_token', opts),\n      getToken: lazyLoad('security.get_token', opts),\n      get_user: lazyLoad('security.get_user', opts),\n      getUser: lazyLoad('security.get_user', opts),\n      get_user_privileges: lazyLoad('security.get_user_privileges', opts),\n      getUserPrivileges: lazyLoad('security.get_user_privileges', opts),\n      has_privileges: lazyLoad('security.has_privileges', opts),\n      hasPrivileges: lazyLoad('security.has_privileges', opts),\n      invalidate_api_key: lazyLoad('security.invalidate_api_key', opts),\n      invalidateApiKey: lazyLoad('security.invalidate_api_key', opts),\n      invalidate_token: lazyLoad('security.invalidate_token', opts),\n      invalidateToken: lazyLoad('security.invalidate_token', opts),\n      put_privileges: lazyLoad('security.put_privileges', opts),\n      putPrivileges: lazyLoad('security.put_privileges', opts),\n      put_role: lazyLoad('security.put_role', opts),\n      putRole: lazyLoad('security.put_role', opts),\n      put_role_mapping: lazyLoad('security.put_role_mapping', opts),\n      putRoleMapping: lazyLoad('security.put_role_mapping', opts),\n      put_user: lazyLoad('security.put_user', opts),\n      putUser: lazyLoad('security.put_user', opts)\n    },\n    snapshot: {\n      create: lazyLoad('snapshot.create', opts),\n      create_repository: lazyLoad('snapshot.create_repository', opts),\n      createRepository: lazyLoad('snapshot.create_repository', opts),\n      delete: lazyLoad('snapshot.delete', opts),\n      delete_repository: lazyLoad('snapshot.delete_repository', opts),\n      deleteRepository: lazyLoad('snapshot.delete_repository', opts),\n      get: lazyLoad('snapshot.get', opts),\n      get_repository: lazyLoad('snapshot.get_repository', opts),\n      getRepository: lazyLoad('snapshot.get_repository', opts),\n      restore: lazyLoad('snapshot.restore', opts),\n      status: lazyLoad('snapshot.status', opts),\n      verify_repository: lazyLoad('snapshot.verify_repository', opts),\n      verifyRepository: lazyLoad('snapshot.verify_repository', opts)\n    },\n    sql: {\n      clear_cursor: lazyLoad('sql.clear_cursor', opts),\n      clearCursor: lazyLoad('sql.clear_cursor', opts),\n      query: lazyLoad('sql.query', opts),\n      translate: lazyLoad('sql.translate', opts)\n    },\n    ssl: {\n      certificates: lazyLoad('ssl.certificates', opts)\n    },\n    tasks: {\n      cancel: lazyLoad('tasks.cancel', opts),\n      get: lazyLoad('tasks.get', opts),\n      list: lazyLoad('tasks.list', opts)\n    },\n    termvectors: lazyLoad('termvectors', opts),\n    update: lazyLoad('update', opts),\n    update_by_query: lazyLoad('update_by_query', opts),\n    updateByQuery: lazyLoad('update_by_query', opts),\n    update_by_query_rethrottle: lazyLoad('update_by_query_rethrottle', opts),\n    updateByQueryRethrottle: lazyLoad('update_by_query_rethrottle', opts),\n    watcher: {\n      ack_watch: lazyLoad('watcher.ack_watch', opts),\n      ackWatch: lazyLoad('watcher.ack_watch', opts),\n      activate_watch: lazyLoad('watcher.activate_watch', opts),\n      activateWatch: lazyLoad('watcher.activate_watch', opts),\n      deactivate_watch: lazyLoad('watcher.deactivate_watch', opts),\n      deactivateWatch: lazyLoad('watcher.deactivate_watch', opts),\n      delete_watch: lazyLoad('watcher.delete_watch', opts),\n      deleteWatch: lazyLoad('watcher.delete_watch', opts),\n      execute_watch: lazyLoad('watcher.execute_watch', opts),\n      executeWatch: lazyLoad('watcher.execute_watch', opts),\n      get_watch: lazyLoad('watcher.get_watch', opts),\n      getWatch: lazyLoad('watcher.get_watch', opts),\n      put_watch: lazyLoad('watcher.put_watch', opts),\n      putWatch: lazyLoad('watcher.put_watch', opts),\n      start: lazyLoad('watcher.start', opts),\n      stats: lazyLoad('watcher.stats', opts),\n      stop: lazyLoad('watcher.stop', opts)\n    },\n    xpack: {\n      info: lazyLoad('xpack.info', opts),\n      usage: lazyLoad('xpack.usage', opts)\n    }\n  };\n  return apis;\n\n  function handleError(err, callback) {\n    if (callback) return callback(err, result);\n    return Promise.reject(err);\n  }\n\n  function snakeCaseKeys(acceptedQuerystring, snakeCase, querystring, warnings) {\n    var target = {};\n    var keys = Object.keys(querystring);\n\n    for (var i = 0, len = keys.length; i < len; i++) {\n      var key = keys[i];\n      target[snakeCase[key] || key] = querystring[key];\n\n      if (acceptedQuerystring.indexOf(snakeCase[key] || key) === -1) {\n        warnings.push('Client - Unknown parameter: \"' + key + '\", sending it as query parameter');\n      }\n    }\n\n    return target;\n  }\n} // It's unlikely that a user needs all of our APIs,\n// and since require is a sync operation that takes time\n// (given the amount of APIs we have), let's lazy load them,\n// so a given API file will be required only\n// if the user actually needs that API.\n// The following implementation takes advantage\n// of js closures to have a simple cache with the least overhead.\n\n\nfunction lazyLoad(file, opts) {\n  var fn = null;\n  return function _lazyLoad(params, options, callback) {\n    if (fn === null) {\n      fn = require(\"./api/\".concat(file, \".js\"))(opts);\n    }\n\n    return fn(params, options, callback);\n  };\n}\n\nmodule.exports = ESAPI;","map":null,"metadata":{},"sourceType":"script"}