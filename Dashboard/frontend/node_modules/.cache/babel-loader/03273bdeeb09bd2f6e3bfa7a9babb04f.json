{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/HostTable.js\";\nimport React from \"react\";\nimport { Button, Dropdown } from 'react-bootstrap';\nexport default class HostTable extends React.PureComponent {\n  getHost(props) {\n    console.log(props);\n    const hostInformation = props.hostInformation;\n    const hostTable = hostInformation.slice(props.tableStart, props.tableEnd).map(host => React.createElement(\"tr\", {\n      key: host[\"Host Name\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, host[\"Host Name\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, host[\"Hardware\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, host[\"System Info\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, host[\"Toolkit Version\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, host[\"Communities\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, host[\"pSchedulers\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => {\n        this.showHostJSON({\n          host\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"View JSON\"))));\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, hostTable);\n  }\n\n  showHostJSON(host) {\n    console.log(\"\");\n    alert(host[\"host\"][\"JSON\"]);\n  }\n\n  chooseHost(hostName, latitude, longitude) {\n    console.log(\"\");\n    this.props.parentCallBack(hostName, latitude, longitude); // this.setState({ serviceVisibility: false });\n    // this.setState({ chosenHost: hostName, chosenLat: latitude, chosenLong: longitude }, function () { this.searchService(\"all\") })\n    // this.searchService()\n  }\n\n  render() {\n    return React.createElement(this.getHost, {\n      hostInformation: this.props.hostInformation,\n      parentCallBack: this.props.parentCallBack,\n      tableStart: this.props.tableStart,\n      tableEnd: this.props.tableEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/HostTable.js"],"names":["React","Button","Dropdown","HostTable","PureComponent","getHost","props","console","log","hostInformation","hostTable","slice","tableStart","tableEnd","map","host","chooseHost","showHostJSON","alert","hostName","latitude","longitude","parentCallBack","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Button, Dropdown} from 'react-bootstrap'\n\n\nexport default class HostTable extends React.PureComponent {\n\n    getHost(props) {\n        console.log(props)\n    \n        const hostInformation = props.hostInformation;\n        const hostTable = hostInformation.slice(props.tableStart, props.tableEnd).map((host) =>\n          <tr key={host[\"Host Name\"]} >\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Host Name\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Hardware\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"System Info\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Toolkit Version\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Communities\"]}</td>\n            <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"pSchedulers\"]}</td>\n            <td><Button variant=\"warning\" onClick={() => { this.showHostJSON({ host }) }}>View JSON</Button></td>\n          </tr>\n        );\n        return (\n          <tbody>\n            {hostTable}\n          </tbody>\n        );\n      }\n\n      showHostJSON(host) {\n        console.log(\"\")\n        alert(host[\"host\"][\"JSON\"])\n      }\n\n      chooseHost(hostName, latitude, longitude) {\n        console.log(\"\")\n        this.props.parentCallBack(hostName, latitude, longitude)\n        // this.setState({ serviceVisibility: false });\n        // this.setState({ chosenHost: hostName, chosenLat: latitude, chosenLong: longitude }, function () { this.searchService(\"all\") })\n        // this.searchService()\n      }\n\n    render() {\n        return (\n            <this.getHost hostInformation={this.props.hostInformation} parentCallBack={this.props.parentCallBack} tableStart = {this.props.tableStart} tableEnd= {this.props.tableEnd}/>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}