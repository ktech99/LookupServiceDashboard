{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js\";\nimport React from \"react\";\nimport { Marker } from \"react-google-maps\"; // import StethoscopeIcon from \"../stethoscopeIcon.png\";\n\nimport dot from \"../image/dot.png\";\nimport { InfoWindow } from 'react-google-maps';\nimport { thisExpression } from \"@babel/types\";\nexport default class Mark extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  onToggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  getServiceType(hostName) {\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + hostName, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {}).catch(console.log);\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: dot,\n      onClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.props.host)), React.createElement(thisExpression.getServiceType, {\n      hostName: this.props.host,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js"],"names":["React","Marker","dot","InfoWindow","thisExpression","Mark","Component","constructor","state","isOpen","onToggle","bind","getServiceType","setState","hostName","fetch","headers","then","res","json","data","catch","console","log","render","props","location","host"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAAQC,UAAR,QAA0B,mBAA1B;AACA,SAASC,cAAT,QAA+B,cAA/B;AAGA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAEhDC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAW;AACTC,MAAAA,MAAM,EAAE;AADC,KAAX;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEFD,EAAAA,QAAQ,GAAE;AACT,SAAKG,QAAL,CAAc;AAACJ,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAArB,KAAd;AACA;;AAEDG,EAAAA,cAAc,CAACE,QAAD,EAAU;AACvBC,IAAAA,KAAK,CAAC,sDAAoDD,QAArD,EAA+D;AAAEE,MAAAA,OAAO,EAAE;AAAE,uCAA+B;AAAjC;AAAX,KAA/D,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEWG,IAAD,IAAU,CAEf,CAJL,EAKKC,KALL,CAKWC,OAAO,CAACC,GALnB;AAMA;;AACAC,EAAAA,MAAM,GAAE;AACN,WACI,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QADvB;AAEE,MAAA,IAAI,EAAExB,GAFR;AAGE,MAAA,OAAO,EAAE,KAAKQ,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKF,KAAL,CAAWC,MAAX,IACK,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKe,KAAL,CAAWE,IAAf,CAAL,CADJ,EAEI,oBAAC,cAAD,CAAgB,cAAhB;AAA+B,MAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWE,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CANR,CADJ;AAaD;;AArC+C","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"../stethoscopeIcon.png\";\nimport dot from \"../image/dot.png\"\nimport {InfoWindow } from 'react-google-maps'\nimport { thisExpression } from \"@babel/types\";\n\n\nexport default class Mark extends React.Component {\n\n  constructor(){\n    super();\n    this.state={\n      isOpen: false\n    }\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n onToggle(){\n  this.setState({isOpen: !this.state.isOpen})\n }\n\n getServiceType(hostName){\n  fetch('http://localhost:8080/getTypeOfServiceHost?hosts='+hostName, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        \n      })\n      .catch(console.log)\n }\n  render(){\n    return(\n        <Marker\n          position={this.props.location}\n          icon={dot}\n          onClick={this.onToggle}\n        >\n          {this.state.isOpen && \n                <InfoWindow onCloseClick={this.onToggle}>\n                    <div><b>{this.props.host}</b></div>\n                    <thisExpression.getServiceType hostName = {this.props.host}/>\n                </InfoWindow>}\n        </Marker>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}