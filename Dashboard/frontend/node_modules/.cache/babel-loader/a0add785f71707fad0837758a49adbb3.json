{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Map.js\";\nimport React, { Component } from 'react';\nimport GoogleMapReact, { GoogleApiWrapper, InfoWindow, Map, Marker } from 'google-maps-react';\nimport '../styles/Map.css';\n\nclass Mapper extends Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onMapClick = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {} // binding this to event-handler functions\n\n    };\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n  }\n\n  render() {\n    return React.createElement(Map, {\n      item: true,\n      xs: 12,\n      google: this.props.google,\n      onClick: this.onMapClick,\n      zoom: 13,\n      initialCenter: {\n        lat: 39.648209,\n        lng: -75.711185\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      title: 'Changing Colors Garage',\n      position: {\n        lat: 39.648209,\n        lng: -75.711185\n      },\n      name: 'Changing Colors Garage',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"hello\")));\n  }\n\n}\n\nMapper.defaultProps = {\n  center: {\n    lat: 59.95,\n    lng: 30.33\n  },\n  zoom: 11\n};\n;\nexport default GoogleApiWrapper({\n  api: \"AIzaSyAEW46KVttk6w0Ik_-hKNl7XqQ31t07q0U\"\n})(Mapper);","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Map.js"],"names":["React","Component","GoogleMapReact","GoogleApiWrapper","InfoWindow","Map","Marker","Mapper","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClick","state","bind","render","google","lat","lng","defaultProps","center","zoom","api"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,IAAyBC,gBAAzB,EAA2CC,UAA3C,EAAuDC,GAAvD,EAA4DC,MAA5D,QAA0E,mBAA1E;AACA,OAAO,mBAAP;;AAGA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAE3BO,EAAAA,WAAW,CAACC,MAAD,EAAQ;AACf,UAAMA,MAAN;;AADe,SAYjBC,aAZiB,GAYD,CAACD,KAAD,EAAQE,MAAR,EAAgBC,CAAhB,KAAsB;AACpC,WAAKC,QAAL,CAAc;AACZC,QAAAA,aAAa,EAAEL,KADH;AAEZM,QAAAA,YAAY,EAAEJ,MAFF;AAGZK,QAAAA,iBAAiB,EAAE;AAHP,OAAd;AAKD,KAlBgB;;AAAA,SAmBjBC,UAnBiB,GAmBHR,KAAD,IAAW;AACtB,UAAI,KAAKS,KAAL,CAAWF,iBAAf,EAAkC;AAChC,aAAKH,QAAL,CAAc;AACZG,UAAAA,iBAAiB,EAAE,KADP;AAEZD,UAAAA,YAAY,EAAE;AAFF,SAAd;AAID;AACF,KA1BgB;;AAEf,SAAKG,KAAL,GAAa;AACXF,MAAAA,iBAAiB,EAAE,KADR;AAEXD,MAAAA,YAAY,EAAE,EAFH;AAGXD,MAAAA,aAAa,EAAE,EAHJ,CAKb;;AALa,KAAb;AAMA,SAAKJ,aAAL,GAAqB,KAAKA,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKF,UAAL,GAAkB,KAAKA,UAAL,CAAgBE,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AA4BLC,EAAAA,MAAM,GAAG;AACP,WAEA,oBAAC,GAAD;AACI,MAAA,IAAI,MADR;AAEI,MAAA,EAAE,EAAK,EAFX;AAGI,MAAA,MAAM,EAAK,KAAKX,KAAL,CAAWY,MAH1B;AAII,MAAA,OAAO,EAAK,KAAKJ,UAJrB;AAKI,MAAA,IAAI,EAAK,EALb;AAMI,MAAA,aAAa,EAAI;AAAEK,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,oBAAC,MAAD;AACE,MAAA,OAAO,EAAK,KAAKb,aADnB;AAEE,MAAA,KAAK,EAAK,wBAFZ;AAGE,MAAA,QAAQ,EAAI;AAAEY,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE,CAAC;AAAxB,OAHd;AAIE,MAAA,IAAI,EAAK,wBAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAcI,oBAAC,UAAD;AACE,MAAA,MAAM,EAAK,KAAKL,KAAL,CAAWH,YADxB;AAEE,MAAA,OAAO,EAAK,KAAKG,KAAL,CAAWF,iBAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CAdJ,CAFA;AAwBD;;AAjE4B;;AAAzBT,M,CA+BGiB,Y,GAAe;AACpBC,EAAAA,MAAM,EAAE;AACNH,IAAAA,GAAG,EAAE,KADC;AAENC,IAAAA,GAAG,EAAE;AAFC,GADY;AAKpBG,EAAAA,IAAI,EAAE;AALc,C;AAmCvB;AAGD,eAAevB,gBAAgB,CAAC;AAC5BwB,EAAAA,GAAG,EAAG;AADsB,CAAD,CAAhB,CAEXpB,MAFW,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport GoogleMapReact, { GoogleApiWrapper, InfoWindow, Map, Marker } from 'google-maps-react';\nimport '../styles/Map.css';\n\n \nclass Mapper extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          showingInfoWindow: false,\n          activeMarker: {},\n          selectedPlace: {}\n        }\n        // binding this to event-handler functions\n        this.onMarkerClick = this.onMarkerClick.bind(this);\n        this.onMapClick = this.onMapClick.bind(this);\n      }\n\n      onMarkerClick = (props, marker, e) => {\n        this.setState({\n          selectedPlace: props,\n          activeMarker: marker,\n          showingInfoWindow: true\n        });\n      }\n      onMapClick = (props) => {\n        if (this.state.showingInfoWindow) {\n          this.setState({\n            showingInfoWindow: false,\n            activeMarker: null\n          });\n        }\n      }\n\n\n  static defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 11\n  };\n  \n \n  render() {\n    return (\n\n    <Map\n        item\n        xs = { 12 }\n        google = { this.props.google }\n        onClick = { this.onMapClick }\n        zoom = { 13 }\n        initialCenter = {{ lat: 39.648209, lng: -75.711185 }}\n      >\n        <Marker\n          onClick = { this.onMarkerClick }\n          title = { 'Changing Colors Garage' }\n          position = {{ lat: 39.648209, lng: -75.711185 }}\n          name = { 'Changing Colors Garage' }\n        />\n        <InfoWindow\n          marker = { this.state.activeMarker }\n          visible = { this.state.showingInfoWindow }\n        >\n          <h1>hello</h1>\n        </InfoWindow>\n      </Map>\n    );\n  }\n};\n\n      \nexport default GoogleApiWrapper({\n    api: (\"AIzaSyAEW46KVttk6w0Ik_-hKNl7XqQ31t07q0U\")\n}) (Mapper);"]},"metadata":{},"sourceType":"module"}