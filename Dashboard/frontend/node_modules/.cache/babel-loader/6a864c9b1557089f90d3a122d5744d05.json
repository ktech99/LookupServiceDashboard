{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Scheduler.js\";\nimport React from \"react\";\nimport { Jumbotron, Button, Dropdown, Table, Tab, Row, Col, Nav } from 'react-bootstrap';\nexport default class Schedulers extends React.PureComponent {\n  getPschedulers(props) {\n    console.log(\"\");\n    const pSchedulers = props.pSchedulers;\n    const listSchedulers = pSchedulers.map(scheduler => React.createElement(\"label\", {\n      key: scheduler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"schedulerCheckBox\",\n      id: scheduler,\n      onClick: () => {\n        var outer = {\n          scheduler\n        }.scheduler;\n        const contains = this.props.chosenSchedulers.includes(outer);\n\n        if (contains) {\n          var remainingItems = this.props.chosenSchedulers.filter(function (scheduler) {\n            return scheduler !== outer;\n          });\n          this.setState({\n            chosenSchedulers: remainingItems\n          });\n        } else {\n          this.props.chosenSchedulers.push(outer);\n          props.parentCallBack(this.props.chosenSchedulers); //this.setState({ chosenSchedulers: this.props.chosenSchedulers })\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }), scheduler));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, listSchedulers);\n  }\n\n  render() {\n    return React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"pScheduler Tests\"), React.createElement(this.getPschedulers, {\n      pSchedulers: this.props.pSchedulerTests,\n      parentCallBack: this.props.parentCallBack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Scheduler.js"],"names":["React","Jumbotron","Button","Dropdown","Table","Tab","Row","Col","Nav","Schedulers","PureComponent","getPschedulers","props","console","log","pSchedulers","listSchedulers","map","scheduler","outer","contains","chosenSchedulers","includes","remainingItems","filter","setState","push","parentCallBack","render","pSchedulerTests"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6CC,GAA7C,EAAkDC,GAAlD,EAAuDC,GAAvD,EAA4DC,GAA5D,QAAuE,iBAAvE;AAGA,eAAe,MAAMC,UAAN,SAAyBT,KAAK,CAACU,aAA/B,CAA6C;AAGxDC,EAAAA,cAAc,CAACC,KAAD,EAAQ;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ;AAEA,UAAMC,WAAW,GAAGH,KAAK,CAACG,WAA1B;AACA,UAAMC,cAAc,GAAGD,WAAW,CAACE,GAAZ,CAAiBC,SAAD,IACrC;AAAO,MAAA,GAAG,EAAEA,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,mBAAjC;AAAqD,MAAA,EAAE,EAAEA,SAAzD;AAAoE,MAAA,OAAO,EAAE,MAAM;AACjF,YAAIC,KAAK,GAAG;AAAED,UAAAA;AAAF,UAAcA,SAA1B;AACA,cAAME,QAAQ,GAAG,KAAKR,KAAL,CAAWS,gBAAX,CAA4BC,QAA5B,CAAqCH,KAArC,CAAjB;;AACA,YAAIC,QAAJ,EAAc;AACZ,cAAIG,cAAc,GAAG,KAAKX,KAAL,CAAWS,gBAAX,CAA4BG,MAA5B,CAAmC,UAAUN,SAAV,EAAqB;AAC3E,mBAAOA,SAAS,KAAKC,KAArB;AACD,WAFoB,CAArB;AAGA,eAAKM,QAAL,CAAc;AAAEJ,YAAAA,gBAAgB,EAAEE;AAApB,WAAd;AACD,SALD,MAKO;AACL,eAAKX,KAAL,CAAWS,gBAAX,CAA4BK,IAA5B,CAAiCP,KAAjC;AACAP,UAAAA,KAAK,CAACe,cAAN,CAAqB,KAAKf,KAAL,CAAWS,gBAAhC,EAFK,CAGL;AACD;AAEF,OAdD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAiBGH,SAjBH,CADqB,CAAvB;AAqBA,WACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,cADH,CADF;AAKD;;AAEHY,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,OAAO,EAAC,MAAzB;AAAgC,MAAA,EAAE,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAKA,yBAAM,cAAN;AAAqB,MAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWiB,eAA7C;AAA8D,MAAA,cAAc,EAAE,KAAKjB,KAAL,CAAWe,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CADJ;AAUH;;AA9CuD","sourcesContent":["import React from \"react\";\nimport { Jumbotron, Button, Dropdown, Table, Tab, Row, Col, Nav } from 'react-bootstrap'\n\n\nexport default class Schedulers extends React.PureComponent {\n\n\n    getPschedulers(props) {\n        console.log(\"\")\n    \n        const pSchedulers = props.pSchedulers;\n        const listSchedulers = pSchedulers.map((scheduler) =>\n          <label key={scheduler}>\n            <input type=\"checkbox\" className=\"schedulerCheckBox\" id={scheduler} onClick={() => {\n              var outer = { scheduler }.scheduler\n              const contains = this.props.chosenSchedulers.includes(outer);\n              if (contains) {\n                var remainingItems = this.props.chosenSchedulers.filter(function (scheduler) {\n                  return scheduler !== outer\n                });\n                this.setState({ chosenSchedulers: remainingItems });\n              } else {\n                this.props.chosenSchedulers.push(outer)\n                props.parentCallBack(this.props.chosenSchedulers);\n                //this.setState({ chosenSchedulers: this.props.chosenSchedulers })\n              }\n    \n            }}>\n            </input>\n            {scheduler}\n          </label>\n        );\n        return (\n          <Dropdown.Menu className=\"scrollBox\">\n            {listSchedulers}\n          </Dropdown.Menu>\n        );\n      }\n\n    render() {\n        return (\n            <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n              pScheduler Tests\n      </Dropdown.Toggle>\n\n            <this.getPschedulers pSchedulers={this.props.pSchedulerTests} parentCallBack={this.props.parentCallBack}/>\n\n          </Dropdown>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}