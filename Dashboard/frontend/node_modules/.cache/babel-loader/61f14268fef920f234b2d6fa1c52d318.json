{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      communities: [] // this.NavBar = this.NavBar.bind(this);\n\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/groupCommunities', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        communities: data\n      });\n    }).catch(console.log);\n  }\n\n  communityList(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map(community => React.createElement(ListGroup.Item, {\n      key: community,\n      as: Button,\n      action: true,\n      onClick: () => {\n        this.communityChoose({\n          community\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, community));\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, listCommunities);\n  }\n\n  render() {\n    return React.createElement(Jumbotron, {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Field Name..\",\n      className: \"searchBarField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search..\",\n      className: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Group communities\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Dropdown.Item, {\n      href: \"#/action-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Another action\"), React.createElement(Dropdown.Item, {\n      href: \"#/action-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Something else\"))), React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"pScheduler Tests\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"One\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: \"checked\",\n      className: \"schedulerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/App.js"],"names":["React","Component","logo","Jumbotron","Button","ListGroup","Dropdown","App","constructor","state","communities","componentDidMount","fetch","headers","then","res","json","data","setState","catch","console","log","communityList","props","listCommunities","map","community","communityChoose","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown } from 'react-bootstrap'\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      communities: [],\n    }\n    // this.NavBar = this.NavBar.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/groupCommunities', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ communities: data })\n      })\n      .catch(console.log)\n  }\n\n  communityList(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map((community) =>\n      <ListGroup.Item key={community} as={Button} action onClick={() => { this.communityChoose({ community }) }}>\n        {community}\n      </ListGroup.Item>\n    );\n    return (\n      <ListGroup>{listCommunities}</ListGroup>\n    );\n  }\n\n\n  render() {\n    return (\n      <Jumbotron className=\"head\">\n        <div>\n          <input type=\"text\" placeholder=\"Field Name..\" className=\"searchBarField\" />\n          <input type=\"text\" placeholder=\"Search..\" className=\"searchBar\" />\n        </div>\n        <div className=\"dropdownDiv\">\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n              Group communities\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n              pScheduler Tests\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <label>One\n                <input type=\"checkbox\" checked=\"checked\" className=\"schedulerCheckBox\" />\n              </label>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n      </Jumbotron>\n    );\n  }\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}