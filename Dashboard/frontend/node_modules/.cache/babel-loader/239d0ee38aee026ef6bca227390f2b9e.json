{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Map.js\";\nimport React, { Component } from 'react';\nimport { compose, withProps } from 'recompose';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps';\nconst google = window.google;\nconst MapWithMarkers = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEW46KVttk6w0Ik_-hKNl7XqQ31t07q0U&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"50vh\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  defaultZoom: 13,\n  defaultCenter: {\n    lat: 42.3381437,\n    lng: -71.0475773\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(MarkerWithInfoWindow, {\n  position: {\n    lat: 42.3381437,\n    lng: -71.0475773\n  },\n  content: \"South Boston\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21\n  },\n  __self: this\n}), React.createElement(MarkerWithInfoWindow, {\n  position: {\n    lat: 42.3875968,\n    lng: -71.0994968\n  },\n  content: \"Somervil\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n})));\n\nclass MarkerWithInfoWindow extends React.Component {\n  constructor() {\n    //uper();\n    this.state = {\n      isOpen: false\n    };\n    this.onToggleOpen = this.onToggleOpen.bind(this);\n  }\n\n  onToggleOpen() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.position,\n      onClick: this.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.content)));\n  }\n\n}\n\nexport default MapWithMarkers;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Map.js"],"names":["React","Component","compose","withProps","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","google","window","MapWithMarkers","googleMapURL","loadingElement","height","containerElement","mapElement","props","lat","lng","MarkerWithInfoWindow","constructor","state","isOpen","onToggleOpen","bind","setState","render","position","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,EAAwDC,UAAxD,QAA0E,mBAA1E;AAEA,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAtB;AAEA,MAAME,cAAc,GAAGT,OAAO,CAC1BC,SAAS,CAAC;AACNS,EAAAA,YAAY,EAAE,uHADR;AAENC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AAGNC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ;AAINE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN,CAAD,CADiB,EAO1BV,YAP0B,EAQ1BC,aAR0B,CAAP,CASrBY,KAAK,IACH,oBAAC,SAAD;AACI,EAAA,WAAW,EAAE,EADjB;AAEI,EAAA,aAAa,EAAE;AAAEC,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE,CAAC;AAAzB,GAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAII,oBAAC,oBAAD;AAAsB,EAAA,QAAQ,EAAE;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE,CAAC;AAAzB,GAAhC;AAAuE,EAAA,OAAO,EAAC,cAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKI,oBAAC,oBAAD;AAAsB,EAAA,QAAQ,EAAE;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE,CAAC;AAAzB,GAAhC;AAAuE,EAAA,OAAO,EAAC,UAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CAVmB,CAAvB;;AAqBA,MAAMC,oBAAN,SAAmCpB,KAAK,CAACC,SAAzC,CAAmD;AAE/CoB,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,GAAG;AACX,SAAKE,QAAL,CAAc;AACVH,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADV,KAAd;AAGH;;AAEDI,EAAAA,MAAM,GAAG;AACL,WAAQ,oBAAC,MAAD;AACJ,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWW,QADjB;AAEJ,MAAA,OAAO,EAAE,KAAKJ,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGH,KAAKF,KAAL,CAAWC,MAAX,IAAqB,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKP,KAAL,CAAWY,OAAhB,CADkB,CAHlB,CAAR;AAOH;;AAxB8C;;AA2BnD,eAAelB,cAAf","sourcesContent":["import React, { Component } from 'react'\nimport { compose, withProps } from 'recompose'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker,InfoWindow } from 'react-google-maps'\n\nconst google = window.google;\n\nconst MapWithMarkers = compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEW46KVttk6w0Ik_-hKNl7XqQ31t07q0U&libraries=geometry,drawing,places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `50vh` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap\n)(props =>\n    <GoogleMap\n        defaultZoom={13}\n        defaultCenter={{ lat: 42.3381437, lng: -71.0475773 }}>\n        {/* Todo loop this */}\n        <MarkerWithInfoWindow position={{ lat: 42.3381437, lng: -71.0475773 }} content=\"South Boston\" />\n        <MarkerWithInfoWindow position={{ lat: 42.3875968, lng: -71.0994968 }} content=\"Somervil\" />\n\n    </GoogleMap>\n);\n\n\nclass MarkerWithInfoWindow extends React.Component {\n\n    constructor() {\n        //uper();\n        this.state = {\n            isOpen: false\n        }\n        this.onToggleOpen = this.onToggleOpen.bind(this);\n    }\n\n    onToggleOpen() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (<Marker\n            position={this.props.position}\n            onClick={this.onToggleOpen}>\n            {this.state.isOpen && <InfoWindow onCloseClick={this.onToggleOpen}>\n                <h3>{this.props.content}</h3>\n            </InfoWindow>}\n        </Marker>)\n    }\n}\n\nexport default MapWithMarkers;"]},"metadata":{},"sourceType":"module"}