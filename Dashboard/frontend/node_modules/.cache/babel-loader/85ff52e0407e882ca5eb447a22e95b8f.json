{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: []\n    };\n    this.getCommunities = this.getCommunities.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/groupCommunities', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        groupCommunities: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/pSchedulerTests', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        pschedulerTests: data\n      });\n      console.log(data);\n    }).catch(console.log);\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map(community => React.createElement(Dropdown.Item, {\n      id: community,\n      key: community,\n      as: Button,\n      onClick: () => {\n        var current = document.getElementById(\"communitiesdropDown\");\n        current.textContent = {\n          community\n        }.community; // changing dropdown name\n\n        this.setState({\n          selectedGroupCommunity: {\n            community\n          }.community\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, community));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, listCommunities);\n  }\n\n  render() {\n    return React.createElement(Jumbotron, {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Field Name..\",\n      className: \"searchBarField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search..\",\n      className: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"communitiesdropDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Group communities\"), React.createElement(this.getCommunities, {\n      communities: this.state.groupCommunities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"pScheduler Tests\"), React.createElement(Dropdown.Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"schedulerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), \"One\")))), React.createElement(\"div\", {\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/App.js"],"names":["React","Component","logo","Jumbotron","Button","ListGroup","Dropdown","ButtonToolbar","App","constructor","state","groupCommunities","selectedGroupCommunity","pSchedulerTests","getCommunities","bind","componentDidMount","fetch","headers","then","res","json","data","setState","catch","console","log","pschedulerTests","props","communities","listCommunities","map","community","current","document","getElementById","textContent","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar } from 'react-bootstrap'\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: []\n    }\n    this.getCommunities = this.getCommunities.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/groupCommunities', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ groupCommunities: data })\n      })\n      .catch(console.log)\n\n      fetch('http://localhost:8080/pSchedulerTests', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ pschedulerTests: data })\n        console.log(data)\n      })\n      .catch(console.log)\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map((community) =>\n      <Dropdown.Item  id = {community} key= {community} as={Button}  onClick={() => { \n        var current = document.getElementById(\"communitiesdropDown\");\n        current.textContent = {community}.community; // changing dropdown name\n        this.setState({selectedGroupCommunity : {community}.community})\n       }}>\n        {/* todo onclick */}\n        {community}\n      </Dropdown.Item>\n    );\n    return (\n      <Dropdown.Menu className=\"scrollBox\">{listCommunities}</Dropdown.Menu>\n    );\n  }\n\n\n  render() {\n    return (\n      <Jumbotron className=\"head\">\n        <div>\n          <input type=\"text\" placeholder=\"Field Name..\" className=\"searchBarField\" />\n          <input type=\"text\" placeholder=\"Search..\" className=\"searchBar\" />\n        </div>\n        <div className=\"dropdownDiv\">\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"communitiesdropDown\">\n              Group communities\n            </Dropdown.Toggle>\n              <this.getCommunities communities={this.state.groupCommunities} />\n          </Dropdown>\n\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n              pScheduler Tests\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <label>\n                <input type=\"checkbox\" className=\"schedulerCheckBox\" />\n                One\n              </label>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <div className=\"submitButton\">\n          <Button variant=\"warning\">Submit</Button>\n        </div>\n      </Jumbotron>\n    );\n  }\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}