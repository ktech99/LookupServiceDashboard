{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/MarkerInfo.js\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from 'react-google-maps';\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nconst MapWithMarkers = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190&libraries=geometry,drawing,places\",\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"800px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  defaultZoom: 13,\n  defaultCenter: new google.maps.LatLng(42.357064, -71.062577),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(MarkerWithInfo, {\n  position: {\n    lat: 42.3381437,\n    lng: -71.0475773\n  },\n  content: \"South Boston\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}), React.createElement(MarkerWithInfo, {\n  position: {\n    lat: 42.3875968,\n    lng: -71.0994968\n  },\n  content: \"Somervil\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n})));\n\nclass MarkerInfo extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false\n    };\n    this.onToggleOpen = this.onToggleOpen.bind(this);\n  }\n\n  onToggleOpen() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.position,\n      onClick: this.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.content)));\n  }\n\n}\n\nexport default MapWithMarkers;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/MarkerInfo.js"],"names":["withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","React","Component","render","MapWithMarkers","compose","withProps","googleMapURL","loadingElement","height","containerElement","mapElement","props","google","maps","LatLng","lat","lng","MarkerInfo","constructor","state","isOpen","onToggleOpen","bind","setState","position","content"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,SAAtC,EAAiDC,MAAjD,EAAwDC,UAAxD,QAA0E,mBAA1E;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAC1BC,SAAS,CAAC;AACNC,EAAAA,YAAY,EAAE,uHADR;AAENC,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFV;AAGNC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHZ;AAINE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM;AAAR,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJN,CAAD,CADiB,EAO1Bb,YAP0B,EAQ1BC,aAR0B,CAAP,CASrBe,KAAK,IACH,oBAAC,SAAD;AACI,EAAA,WAAW,EAAE,EADjB;AAEI,EAAA,aAAa,EAAE,IAAIC,MAAM,CAACC,IAAP,CAAYC,MAAhB,CAAuB,SAAvB,EAAkC,CAAC,SAAnC,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAII,oBAAC,cAAD;AAAgB,EAAA,QAAQ,EAAE;AAAEC,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE,CAAC;AAAzB,GAA1B;AAAiE,EAAA,OAAO,EAAC,cAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJJ,EAKI,oBAAC,cAAD;AAAgB,EAAA,QAAQ,EAAE;AAAED,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,GAAG,EAAE,CAAC;AAAzB,GAA1B;AAAiE,EAAA,OAAO,EAAC,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EALJ,CAVmB,CAAvB;;AAoBA,MAAMC,UAAN,SAAyBjB,KAAK,CAACC,SAA/B,CAAyC;AAErCiB,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,GAAG;AACX,SAAKE,QAAL,CAAc;AACVH,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADV,KAAd;AAGH;;AAEDlB,EAAAA,MAAM,GAAG;AACL,WAAQ,oBAAC,MAAD;AACJ,MAAA,QAAQ,EAAE,KAAKS,KAAL,CAAWa,QADjB;AAEJ,MAAA,OAAO,EAAE,KAAKH,YAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGH,KAAKF,KAAL,CAAWC,MAAX,IAAqB,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKV,KAAL,CAAWc,OAAhB,CADkB,CAHlB,CAAR;AAOH;;AAxBoC;;AA2BzC,eAAetB,cAAf","sourcesContent":["import { withScriptjs, withGoogleMap, GoogleMap, Marker,InfoWindow } from 'react-google-maps'\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\n\nconst MapWithMarkers = compose(\n    withProps({\n        googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyDf-yIqxErTkbWzKhLox7nAANnrfDIY190&libraries=geometry,drawing,places\",\n        loadingElement: <div style={{ height: `100%` }} />,\n        containerElement: <div style={{ height: `800px` }} />,\n        mapElement: <div style={{ height: `100%` }} />,\n    }),\n    withScriptjs,\n    withGoogleMap\n)(props =>\n    <GoogleMap\n        defaultZoom={13}\n        defaultCenter={new google.maps.LatLng(42.357064, -71.062577)}>\n\n        <MarkerWithInfo position={{ lat: 42.3381437, lng: -71.0475773 }} content=\"South Boston\" />\n        <MarkerWithInfo position={{ lat: 42.3875968, lng: -71.0994968 }} content=\"Somervil\" />\n\n    </GoogleMap>\n);\n\nclass MarkerInfo extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            isOpen: false\n        }\n        this.onToggleOpen = this.onToggleOpen.bind(this);\n    }\n\n    onToggleOpen() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    render() {\n        return (<Marker\n            position={this.props.position}\n            onClick={this.onToggleOpen}>\n            {this.state.isOpen && <InfoWindow onCloseClick={this.onToggleOpen}>\n                <h3>{this.props.content}</h3>\n            </InfoWindow>}\n        </Marker>)\n    }\n}\n\nexport default MapWithMarkers;"]},"metadata":{},"sourceType":"module"}