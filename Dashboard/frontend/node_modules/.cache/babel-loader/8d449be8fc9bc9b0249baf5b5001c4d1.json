{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Row, Col, Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      communities: [],\n      services: [],\n      serviceMap: {},\n      serviceDetails: []\n    };\n    this.communityChoose = this.communityChoose.bind(this);\n    this.communityList = this.communityList.bind(this);\n    this.serviceList = this.serviceList.bind(this);\n    this.serviceChoose = this.serviceChoose.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/groupCommunities', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        communities: data\n      }); //console.log(this.state.communities)\n    }).catch(console.log);\n  }\n\n  communityList(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map(community => React.createElement(ListGroup.Item, {\n      key: community,\n      as: Button,\n      action: true,\n      onClick: () => {\n        this.communityChoose({\n          community\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, community));\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, listCommunities);\n  }\n\n  communityChoose(element) {\n    let self = this;\n    fetch('http://localhost:8080/services?serviceName=' + element.community, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      // console.log(Object.keys(data));\n      self.setState({\n        services: Object.keys(data)\n      });\n      self.setState({\n        serviceMap: data\n      });\n      var accID = document.getElementById('communityCard');\n      accID.click();\n      var serviceId = document.getElementById(\"serviceTypeCard\");\n      serviceId.click();\n      console.log(self.state.serviceMap);\n    }).catch(console.log);\n  }\n\n  serviceList(props) {\n    const services = props.services;\n    const listServices = services.map(service => React.createElement(ListGroup.Item, {\n      key: service,\n      as: Button,\n      action: true,\n      onClick: () => {\n        this.serviceChoose({\n          service\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, service));\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, listServices);\n  }\n\n  serviceChoose(element) {\n    var serviceId = document.getElementById(\"serviceTypeCard\");\n    serviceId.click();\n    var hostId = document.getElementById(\"hostNameCard\");\n    hostId.click();\n\n    for (var i in this.state.serviceMap) {\n      // alert(i); // alerts key\n      // alert(foo[i]); //alerts key's value\n      if (i === element.service) {\n        this.setState({\n          serviceDetails: this.state.serviceMap[i]\n        });\n      }\n    }\n\n    console.log(this.state.serviceDetails);\n  }\n\n  hostList(props) {\n    const hosts = props.serviceDetails;\n    console.log(this.serviceDetails);\n    const listServices = hosts.map(host => React.createElement(ListGroup.Item, {\n      key: host,\n      as: Button,\n      action: true,\n      onClick: () => {\n        this.serviceChoose({\n          host\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, host));\n    return React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, listServices);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topnav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"perfSONAR logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"SearchButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Search\")), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"sidebar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Accordion, {\n      defaultActiveKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"0\",\n      id: \"communityCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Communities\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      defaultActiveKey: \"#link1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(this.communityList, {\n      communities: this.state.communities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })))))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"1\",\n      id: \"serviceTypeCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Service Type\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(this.serviceList, {\n      services: this.state.services,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })))))), React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Card.Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Accordion.Toggle, {\n      as: Button,\n      variant: \"link\",\n      eventKey: \"2\",\n      id: \"hostNameCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Host Name\")), React.createElement(Accordion.Collapse, {\n      eventKey: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(ListGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(this.hostList, {\n      services: this.state.services,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })))))))), React.createElement(Col, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"2 of 2\"))));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/App.js"],"names":["React","Component","logo","Row","Col","Container","Accordion","Card","Button","ListGroup","App","constructor","state","communities","services","serviceMap","serviceDetails","communityChoose","bind","communityList","serviceList","serviceChoose","componentDidMount","fetch","headers","then","res","json","data","setState","catch","console","log","props","listCommunities","map","community","element","self","response","Object","keys","accID","document","getElementById","click","serviceId","listServices","service","hostId","i","hostList","hosts","host","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Row, Col, Container, Accordion, Card, Button, ListGroup } from 'react-bootstrap'\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      communities: [],\n      services: [],\n      serviceMap: {},\n      serviceDetails: []\n    }\n    this.communityChoose = this.communityChoose.bind(this); \n    this.communityList = this.communityList.bind(this);\n    this.serviceList = this.serviceList.bind(this);\n    this.serviceChoose = this.serviceChoose.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/groupCommunities', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ communities: data })\n        //console.log(this.state.communities)\n      })\n      .catch(console.log)\n  }\n\n  communityList(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map((community) =>\n      <ListGroup.Item key={community} as={Button} action onClick={() => {this.communityChoose({community})}}>\n        {community}\n      </ListGroup.Item>\n    );\n    return (\n      <ListGroup>{listCommunities}</ListGroup>\n    );\n  }\n\n   communityChoose(element) {\n    let self = this;\n    fetch('http://localhost:8080/services?serviceName='+element.community, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n        .then(function(response){\n          return response.json();\n        })\n        .then(function(data) {\n          // console.log(Object.keys(data));\n          self.setState({ services: Object.keys(data) })\n          self.setState({serviceMap: data})\n          var accID = document.getElementById('communityCard');\n          accID.click();\n          var serviceId = document.getElementById(\"serviceTypeCard\");\n          serviceId.click();\n          console.log(self.state.serviceMap)\n        })\n        .catch(console.log)\n  }\n\n  serviceList(props) {\n    const services = props.services;\n    const listServices = services.map((service) =>\n      <ListGroup.Item key={service} as={Button} action onClick={() => {this.serviceChoose({service})}}>\n        {service}\n      </ListGroup.Item>\n    );\n    return (\n      <ListGroup>{listServices}</ListGroup>\n    );\n  }\n\n  serviceChoose(element) {\n    var serviceId = document.getElementById(\"serviceTypeCard\");\n    serviceId.click();\n    var hostId = document.getElementById(\"hostNameCard\");\n    hostId.click();\n    for(var i in this.state.serviceMap){\n      // alert(i); // alerts key\n      // alert(foo[i]); //alerts key's value\n      if(i === element.service){\n        this.setState({serviceDetails: this.state.serviceMap[i]});\n      }\n    }\n    console.log(this.state.serviceDetails);\n  }\n\n  hostList(props) {\n    const hosts = props.serviceDetails;\n    console.log(this.serviceDetails);\n    const listServices = hosts.map((host) =>\n      <ListGroup.Item key={host} as={Button} action onClick={() => {this.serviceChoose({host})}}>\n        {host}\n      </ListGroup.Item>\n    );\n    return (\n      <ListGroup>{listServices}</ListGroup>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"topnav\">\n          <img src={logo} alt=\"perfSONAR logo\"></img>\n          <input type=\"text\" placeholder=\"Search..\" />\n          <button className=\"SearchButton\">Search</button>\n        </div>\n        <Container >\n          <Row>\n            <Col className = \"sidebar\">\n              <Accordion defaultActiveKey=\"0\">\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\" id = \"communityCard\">\n                      Communities\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body >\n                      <ListGroup defaultActiveKey=\"#link1\">\n                        <div className=\"scrollBox\">\n                        <this.communityList communities={this.state.communities} />\n                        </div>\n                      </ListGroup>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n                \n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\" id=\"serviceTypeCard\">\n                      Service Type\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"1\">\n                    <Card.Body>\n                      <ListGroup>\n                        <div className=\"scrollBox\">\n                          <this.serviceList services = {this.state.services}/>\n                        </div>\n                      </ListGroup>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n\n                <Card>\n                  <Card.Header>\n                    <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"2\" id=\"hostNameCard\">\n                      Host Name\n                    </Accordion.Toggle>\n                  </Card.Header>\n                  <Accordion.Collapse eventKey=\"2\">\n                    <Card.Body>\n                      <ListGroup>\n                        <div className=\"scrollBox\">\n                          <this.hostList services = {this.state.services}/>\n                        </div>\n                      </ListGroup>\n                    </Card.Body>\n                  </Accordion.Collapse>\n                </Card>\n\n              </Accordion>\n            </Col>\n            <Col >\n            2 of 2\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}