{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js\";\nimport React from \"react\";\nimport { Marker } from \"react-google-maps\"; // import StethoscopeIcon from \"../stethoscopeIcon.png\";\n\nimport dot from \"../image/dot.png\";\nimport { InfoWindow } from 'react-google-maps';\nimport { Table } from 'react-bootstrap';\nexport default class Mark extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      server: [],\n      chosenHost: \"\"\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  onToggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  getServiceType(hostName) {\n    if (this.state.server.length === 0) {\n      fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + this.props.hostUri, {\n        headers: {\n          'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n        }\n      }).then(res => res.json()).then(data => {\n        this.setState({\n          server: data\n        });\n      }).catch(console.log);\n    }\n\n    const serverTable = hostName.hostName.map(server => React.createElement(\"tr\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(this.props.hostUri, server);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, server)));\n    return serverTable;\n  }\n\n  chooseHost(hostName, server) {\n    fetch('http://localhost:8080/searchService?hosts=' + hostName + \"&type=\" + server, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        serviceResults: data\n      });\n    }).catch(console.log);\n    console.log(this.state.serviceResults);\n    document.getElementById(\"informationTabs-tab-second\").click();\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: dot,\n      onClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.props.host), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Server Type\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(this.getServiceType, {\n      hostName: this.state.server,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js"],"names":["React","Marker","dot","InfoWindow","Table","Mark","Component","constructor","state","isOpen","server","chosenHost","onToggle","bind","getServiceType","setState","hostName","length","fetch","props","hostUri","headers","then","res","json","data","catch","console","log","serverTable","map","Math","random","chooseHost","serviceResults","document","getElementById","click","render","location","host"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"../stethoscopeIcon.png\";\nimport dot from \"../image/dot.png\"\nimport { InfoWindow } from 'react-google-maps'\nimport { Table } from 'react-bootstrap'\n\n\nexport default class Mark extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      server: [],\n      chosenHost: \"\"\n    }\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  onToggle() {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  getServiceType(hostName) {\n    if(this.state.server.length === 0){\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + this.props.hostUri, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ server: data })\n      })\n      .catch(console.log)\n    }\n    const serverTable = hostName.hostName.map((server) =>\n      <tr key={Math.random()}>\n        <td onClick={() => { this.chooseHost(this.props.hostUri, server)}}>{server}</td>\n      </tr>);\n    return serverTable;\n  }\n\n  chooseHost(hostName,server) {\n    fetch('http://localhost:8080/searchService?hosts=' +hostName+\"&type=\"+server, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ serviceResults: data })\n    })\n    .catch(console.log)\n  console.log(this.state.serviceResults)\n  document.getElementById(\"informationTabs-tab-second\").click();\n  }\n\n  render() {\n    return (\n      <Marker\n        position={this.props.location}\n        icon={dot}\n        onClick={this.onToggle}\n        \n      >\n        {this.state.isOpen &&\n          <InfoWindow onCloseClick={this.onToggle}>\n            <div><b>{this.props.host}</b>\n            <br></br>                \n            <br></br>\n\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Server Type</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <this.getServiceType hostName={this.state.server} ></this.getServiceType>\n                </tbody>\n              </Table>\n              {/* <this.getServiceType hostName={this.props.hostUri} /> */}\n            </div>\n\n          </InfoWindow>}\n      </Marker>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}