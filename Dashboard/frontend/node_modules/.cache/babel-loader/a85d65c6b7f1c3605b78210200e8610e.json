{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar, Table, Tab, Row, Col, Nav } from 'react-bootstrap';\nimport Search from \"react-search\";\nimport { thisExpression } from '@babel/types';\nimport { DH_NOT_SUITABLE_GENERATOR } from 'constants';\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport Mark from \"./Mark\"; // import Map from \"./Map\"\n\nconst Map = withScriptjs(withGoogleMap(props => {\n  const markers = props.all.map(coord => React.createElement(Mark, {\n    key: coord,\n    location: {\n      lat: parseFloat(coord.latitude),\n      lng: parseFloat(coord.longitude)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), coord => console.log(coord.latitude));\n  console.log(props);\n  return React.createElement(GoogleMap, {\n    defaultZoom: 14,\n    center: {\n      lat: parseFloat(props.lat),\n      lng: parseFloat(props.long)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, markers);\n}));\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: [],\n      chosenSchedulers: [],\n      keys: [],\n      chosenKey: \"\",\n      searchTerm: \"\",\n      hostResults: [],\n      serviceVisibility: true,\n      chosenHost: \"\",\n      serviceResults: [],\n      chosenLat: 0,\n      chosenLong: 0,\n      showMap: true,\n      allCoordinates: []\n    };\n    this.getCommunities = this.getCommunities.bind(this);\n    this.getPschedulers = this.getPschedulers.bind(this);\n    this.searchHost = this.searchHost.bind(this);\n    this.getHost = this.getHost.bind(this);\n    this.chooseHost = this.chooseHost.bind(this);\n    this.searchService = this.searchService.bind(this);\n    this.getService = this.getService.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/groupCommunities', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        groupCommunities: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/getAllKeys', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      data = data.map(value => ({\n        id: 1,\n        value: value\n      }));\n      this.setState({\n        keys: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/pSchedulerTests', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        pSchedulerTests: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/getCoordinates', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    }).catch(console.log);\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map(community => React.createElement(Dropdown.Item, {\n      id: community,\n      key: community,\n      as: Button,\n      onClick: () => {\n        var current = document.getElementById(\"communitiesdropDown\");\n        current.textContent = \"Communities: \" + {\n          community\n        }.community; // changing dropdown name\n\n        this.setState({\n          selectedGroupCommunity: {\n            community\n          }.community\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, community));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, listCommunities);\n  }\n\n  getPschedulers(props) {\n    const pSchedulers = props.pSchedulers;\n    const listSchedulers = pSchedulers.map(scheduler => React.createElement(\"label\", {\n      key: scheduler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"schedulerCheckBox\",\n      id: scheduler,\n      onClick: () => {\n        console.log(this.state.chosenSchedulers);\n        const contains = this.state.chosenSchedulers.includes({\n          scheduler\n        }.scheduler);\n\n        if (contains) {\n          var remainingItems = this.state.chosenSchedulers.filter(function (scheduler) {\n            return scheduler !== {\n              scheduler\n            }.scheduler;\n          });\n          this.setState({\n            chosenSchedulers: remainingItems\n          });\n        } else {\n          this.state.chosenSchedulers.push({\n            scheduler\n          }.scheduler);\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), scheduler));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, listSchedulers);\n  }\n\n  updateSearch() {\n    this.setState({\n      searchTerm: document.getElementById(\"searchBar\").value\n    });\n  }\n\n  keySelect(items) {\n    if (items.length !== 0) {\n      this.setState({\n        chosenKey: items\n      });\n      console.log(items[0][\"value\"]);\n    }\n  }\n\n  searchHost() {\n    if (this.state.chosenKey.length !== 0) {\n      var key = this.state.chosenKey[0][\"value\"];\n    } else {\n      var key = \"\";\n    }\n\n    fetch('http://localhost:8080/search?key=' + key + \"&groupCommunity=\" + this.state.selectedGroupCommunity + \"&pSchedulers=\" + this.state.chosenSchedulers + \"&searchTerm=\" + this.state.searchTerm + \"&limit=10\", {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        hostResults: data\n      });\n    }).catch(console.log);\n    this.setState({\n      serviceVisibility: true\n    });\n    document.getElementById(\"informationTabs-tab-first\").click(); // console.log(this.state.hostResults)\n  }\n\n  getHost(props) {\n    const hostInformation = props.hostInformation;\n    const hostTable = hostInformation.map(host => React.createElement(\"tr\", {\n      key: host[\"Host Name\"],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, host[\"Host Name\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, host[\"Hardware\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, host[\"System Info\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, host[\"Toolkit Version\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, host[\"Communities\"]), React.createElement(\"td\", {\n      onClick: () => {\n        this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, host[\"pSchedulers\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => {\n        this.showHostJSON({\n          host\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"View JSON\"))));\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, hostTable);\n  }\n\n  chooseHost(hostName, latitude, longitude) {\n    this.setState({\n      serviceVisibility: false\n    });\n    this.setState({\n      chosenHost: hostName,\n      chosenLat: latitude,\n      chosenLong: longitude\n    }, function () {\n      this.searchService();\n    }); // this.searchService()\n  }\n\n  showHostJSON(host) {\n    console.log(host);\n    alert(host[\"host\"][\"JSON\"]);\n  }\n\n  searchService() {\n    fetch('http://localhost:8080/searchService?hosts=' + this.state.chosenHost, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        serviceResults: data\n      });\n    }).catch(console.log);\n    console.log(this.state.serviceResults);\n    document.getElementById(\"informationTabs-tab-second\").click();\n  }\n\n  getService(props) {\n    const serviceInformation = props.serviceInformation;\n    const serviceTable = serviceInformation.map(service => React.createElement(\"tr\", {\n      key: Math.random(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, service[\"name\"], \" - \", service[\"type\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, service[\"address\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.state.chosenLat, \" , \", this.state.chosenLong), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, service[\"communities\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, service[\"version\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, service[\"command\"]), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => {\n        this.showServiceJSON({\n          service\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"View JSON\"))));\n    return React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, serviceTable);\n  }\n\n  showServiceJSON(host) {\n    console.log(host);\n    alert(host[\"service\"][\"JSON\"]);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(Search, {\n      items: this.state.keys,\n      placeholder: \"Eneter a key (optional) : \",\n      maxSelected: 1,\n      multiple: true,\n      onItemsChanged: this.keySelect.bind(this),\n      className: \"searchBarField\",\n      id: \"keySelector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search..\",\n      className: \"searchBar\",\n      onChange: this.updateSearch.bind(this),\n      id: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"communitiesdropDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Group communities\"), React.createElement(this.getCommunities, {\n      communities: this.state.groupCommunities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257\n      },\n      __self: this\n    })), React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"pScheduler Tests\"), React.createElement(this.getPschedulers, {\n      pSchedulers: this.state.pSchedulerTests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      onClick: () => {\n        this.searchHost();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, \"Submit\"))), React.createElement(Tab.Container, {\n      id: \"informationTabs\",\n      defaultActiveKey: \"first\",\n      className: \"informationTabs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      variant: \"pills\",\n      className: \"flex-column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Nav.Item, {\n      id: \"hostTab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      eventKey: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Host Information\")), React.createElement(Nav.Item, {\n      id: \"serviceTab\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, React.createElement(Nav.Link, {\n      eventKey: \"second\",\n      disabled: this.state.serviceVisibility,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, \"Service Information\")))), React.createElement(Col, {\n      sm: 9,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, React.createElement(Tab.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(Tab.Pane, {\n      eventKey: \"first\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, \"Host Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"Hardware\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"System Info\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Toolkit-Version\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, \"Communities\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Pscheduler Tests\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"JSON\"))), React.createElement(this.getHost, {\n      hostInformation: this.state.hostResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }))), React.createElement(Tab.Pane, {\n      eventKey: \"second\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Service Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Address\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"geographic Location\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Communities\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    }, \"Version\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Example Command\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, \"JSON\"))), React.createElement(this.getService, {\n      serviceInformation: this.state.serviceResults,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }))))))), React.createElement(Map, {\n      lat: this.state.chosenLat,\n      long: this.state.chosenLong,\n      all: this.state.allCoordinates,\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAEW46KVttk6w0Ik_-hKNl7XqQ31t07q0U&v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }),\n      containerElement: React.createElement(\"div\", {\n        style: {\n          height: \"600px\",\n          width: \"100vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }),\n      mapElement: React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/App.js"],"names":["React","Component","logo","Jumbotron","Button","ListGroup","Dropdown","ButtonToolbar","Table","Tab","Row","Col","Nav","Search","thisExpression","DH_NOT_SUITABLE_GENERATOR","withScriptjs","withGoogleMap","GoogleMap","Mark","Map","props","markers","all","map","coord","lat","parseFloat","latitude","lng","longitude","console","log","long","App","constructor","state","groupCommunities","selectedGroupCommunity","pSchedulerTests","chosenSchedulers","keys","chosenKey","searchTerm","hostResults","serviceVisibility","chosenHost","serviceResults","chosenLat","chosenLong","showMap","allCoordinates","getCommunities","bind","getPschedulers","searchHost","getHost","chooseHost","searchService","getService","componentDidMount","fetch","headers","then","res","json","data","setState","catch","value","id","communities","listCommunities","community","current","document","getElementById","textContent","pSchedulers","listSchedulers","scheduler","contains","includes","remainingItems","filter","push","updateSearch","keySelect","items","length","key","click","hostInformation","hostTable","host","showHostJSON","hostName","alert","serviceInformation","serviceTable","service","Math","random","showServiceJSON","render","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar, Table, Tab, Row, Col, Nav } from 'react-bootstrap'\nimport Search from \"react-search\"\nimport { thisExpression } from '@babel/types';\nimport { DH_NOT_SUITABLE_GENERATOR } from 'constants';\nimport { withScriptjs, withGoogleMap, GoogleMap } from \"react-google-maps\";\nimport Mark from \"./Mark\";\n\n// import Map from \"./Map\"\n\nconst Map = withScriptjs(withGoogleMap((props) => {\n\n    const markers = props.all.map( coord => <Mark\n                      key={coord}\n                      location={{lat: parseFloat(coord.latitude), lng: parseFloat(coord.longitude)}}\n                    \n                    /> ,coord => console.log(coord.latitude));\n  console.log(props)\n  return (\n    <GoogleMap\n      defaultZoom={14}\n      center={{ lat: parseFloat(props.lat), lng: parseFloat(props.long) }}\n    >\n      {/* <Mark\n        key={1}\n        doctor={2}\n        location={{ lat: parseFloat(props.lat), lng: parseFloat(props.long) }}\n      /> */}\n      {markers}\n    </GoogleMap>\n  );\n}\n))\n\nclass App extends Component {\n\n\n  constructor() {\n    super();\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: [],\n      chosenSchedulers: [],\n      keys: [],\n      chosenKey: \"\",\n      searchTerm: \"\",\n      hostResults: [],\n      serviceVisibility: true,\n      chosenHost: \"\",\n      serviceResults: [],\n      chosenLat: 0,\n      chosenLong: 0,\n      showMap: true,\n      allCoordinates: []\n    }\n\n    this.getCommunities = this.getCommunities.bind(this);\n    this.getPschedulers = this.getPschedulers.bind(this);\n    this.searchHost = this.searchHost.bind(this);\n    this.getHost = this.getHost.bind(this);\n    this.chooseHost = this.chooseHost.bind(this);\n    this.searchService = this.searchService.bind(this)\n    this.getService = this.getService.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/groupCommunities', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ groupCommunities: data })\n      })\n      .catch(console.log)\n\n    fetch('http://localhost:8080/getAllKeys', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        data = data.map(value => ({ id: 1, value: value }))\n        this.setState({ keys: data })\n      })\n      .catch(console.log)\n\n    fetch('http://localhost:8080/pSchedulerTests', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ pSchedulerTests: data })\n      })\n      .catch(console.log)\n\n      fetch('http://localhost:8080/getCoordinates', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        console.log(data)\n      })\n      .catch(console.log)\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map((community) =>\n      <Dropdown.Item id={community} key={community} as={Button}\n        onClick={() => {\n          var current = document.getElementById(\"communitiesdropDown\");\n          current.textContent = \"Communities: \" + { community }.community; // changing dropdown name\n          this.setState({ selectedGroupCommunity: { community }.community })\n        }}>\n        {community}\n\n      </Dropdown.Item>\n    );\n    return (\n      <Dropdown.Menu className=\"scrollBox\">{listCommunities}</Dropdown.Menu>\n    );\n  }\n\n  getPschedulers(props) {\n    const pSchedulers = props.pSchedulers;\n    const listSchedulers = pSchedulers.map((scheduler) =>\n      <label key={scheduler}>\n        <input type=\"checkbox\" className=\"schedulerCheckBox\" id={scheduler} onClick={() => {\n          console.log(this.state.chosenSchedulers);\n          const contains = this.state.chosenSchedulers.includes({ scheduler }.scheduler);\n          if (contains) {\n            var remainingItems = this.state.chosenSchedulers.filter(function (scheduler) { return scheduler !== { scheduler }.scheduler });\n            this.setState({ chosenSchedulers: remainingItems });\n          } else {\n            this.state.chosenSchedulers.push({ scheduler }.scheduler)\n          }\n\n        }}>\n        </input>\n        {scheduler}\n      </label>\n    );\n    return (\n      <Dropdown.Menu className=\"scrollBox\">\n        {listSchedulers}\n      </Dropdown.Menu>\n    );\n  }\n\n  updateSearch() {\n    this.setState({ searchTerm: document.getElementById(\"searchBar\").value })\n  }\n\n  keySelect(items) {\n    if (items.length !== 0) {\n      this.setState({ chosenKey: items });\n      console.log(items[0][\"value\"])\n    }\n  }\n\n  searchHost() {\n    if (this.state.chosenKey.length !== 0) {\n      var key = this.state.chosenKey[0][\"value\"]\n    } else {\n      var key = \"\"\n    }\n    fetch('http://localhost:8080/search?key=' + key + \"&groupCommunity=\" + this.state.selectedGroupCommunity + \"&pSchedulers=\" + this.state.chosenSchedulers + \"&searchTerm=\" + this.state.searchTerm + \"&limit=10\", { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ hostResults: data })\n      })\n      .catch(console.log)\n    this.setState({ serviceVisibility: true });\n    document.getElementById(\"informationTabs-tab-first\").click();\n    // console.log(this.state.hostResults)\n  }\n\n  getHost(props) {\n    const hostInformation = props.hostInformation;\n    const hostTable = hostInformation.map((host) =>\n      <tr key={host[\"Host Name\"]} >\n        <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Host Name\"]}</td>\n        <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Hardware\"]}</td>\n        <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"System Info\"]}</td>\n        <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Toolkit Version\"]}</td>\n        <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"Communities\"]}</td>\n        <td onClick={() => { this.chooseHost(host[\"URI\"], host[\"latitude\"], host[\"longitude\"]) }}>{host[\"pSchedulers\"]}</td>\n        <td><Button variant=\"warning\" onClick={() => { this.showHostJSON({ host }) }}>View JSON</Button></td>\n      </tr>\n    );\n    return (\n      <tbody>\n        {hostTable}\n      </tbody>\n    );\n  }\n\n  chooseHost(hostName, latitude, longitude) {\n    this.setState({ serviceVisibility: false });\n    this.setState({ chosenHost: hostName, chosenLat: latitude, chosenLong: longitude }, function () { this.searchService() })\n    // this.searchService()\n  }\n\n  showHostJSON(host) {\n    console.log(host)\n    alert(host[\"host\"][\"JSON\"])\n  }\n\n  searchService() {\n    fetch('http://localhost:8080/searchService?hosts=' + this.state.chosenHost, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ serviceResults: data })\n      })\n      .catch(console.log)\n    console.log(this.state.serviceResults)\n    document.getElementById(\"informationTabs-tab-second\").click();\n  }\n\n  getService(props) {\n    const serviceInformation = props.serviceInformation;\n    const serviceTable = serviceInformation.map((service) =>\n      <tr key={Math.random()} >\n        <td>{service[\"name\"]} - {service[\"type\"]}</td>\n        <td>{service[\"address\"]}</td>\n        <td>{this.state.chosenLat} , {this.state.chosenLong}</td>\n        <td>{service[\"communities\"]}</td>\n        <td>{service[\"version\"]}</td>\n        <td>{service[\"command\"]}</td>\n        <td><Button variant=\"warning\" onClick={() => { this.showServiceJSON({ service }) }}>View JSON</Button></td>\n      </tr>\n    );\n    return (\n      <tbody>\n        {serviceTable}\n      </tbody>\n    );\n  }\n\n  showServiceJSON(host) {\n    console.log(host)\n    alert(host[\"service\"][\"JSON\"])\n  }\n\n  render() {\n    return (\n      <div>\n        <Jumbotron className=\"head\">\n          <div>\n            <Search items={this.state.keys}\n              placeholder=\"Eneter a key (optional) : \"\n              maxSelected={1}\n              multiple={true}\n              onItemsChanged={this.keySelect.bind(this)} className=\"searchBarField\" id=\"keySelector\" />\n            <input type=\"text\" placeholder=\"Search..\" className=\"searchBar\" onChange={this.updateSearch.bind(this)} id=\"searchBar\" />\n          </div>\n          <div className=\"dropdownDiv\">\n            <Dropdown className=\"dropdownDiv\">\n              <Dropdown.Toggle variant=\"dark\" id=\"communitiesdropDown\">\n                Group communities\n            </Dropdown.Toggle>\n              <this.getCommunities communities={this.state.groupCommunities} />\n            </Dropdown>\n\n            <Dropdown className=\"dropdownDiv\">\n              <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n                pScheduler Tests\n            </Dropdown.Toggle>\n\n              <this.getPschedulers pSchedulers={this.state.pSchedulerTests} />\n\n            </Dropdown>\n          </div>\n          <div className=\"submitButton\">\n            <Button variant=\"warning\" onClick={() => { this.searchHost() }}>Submit</Button>\n          </div>\n        </Jumbotron>\n\n        <Tab.Container id=\"informationTabs\" defaultActiveKey=\"first\" className=\"informationTabs\">\n          <Row>\n            <Col sm={2}>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item id=\"hostTab\">\n                  <Nav.Link eventKey=\"first\">Host Information</Nav.Link>\n                </Nav.Item>\n                <Nav.Item id=\"serviceTab\">\n                  <Nav.Link eventKey=\"second\" disabled={this.state.serviceVisibility} >Service Information</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm={9}>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"first\">\n                  <Table striped bordered hover variant=\"dark\">\n                    <thead>\n                      <tr>\n                        <th>Host Name</th>\n                        <th>Hardware</th>\n                        <th>System Info</th>\n                        <th>Toolkit-Version</th>\n                        <th>Communities</th>\n                        <th>Pscheduler Tests</th>\n                        <th>JSON</th>\n                      </tr>\n                    </thead>\n                    <this.getHost hostInformation={this.state.hostResults} />\n                  </Table>\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"second\">\n                  <Table striped bordered hover variant=\"dark\" >\n                    <thead>\n                      <tr>\n                        <th>Service Name</th>\n                        <th>Address</th>\n                        <th>geographic Location</th>\n                        <th>Communities</th>\n                        <th>Version</th>\n                        <th>Example Command</th>\n                        <th>JSON</th>\n                      </tr>\n                    </thead>\n                    <this.getService serviceInformation={this.state.serviceResults} />\n                  </Table>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n        <Map\n          lat={this.state.chosenLat}\n          long = {this.state.chosenLong}\n          all = {this.state.allCoordinates}\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyAEW46KVttk6w0Ik_-hKNl7XqQ31t07q0U&v=3.exp&libraries=geometry,drawing,places`}\n          loadingElement={<div style={{ height: `100%` }} />}\n          containerElement={<div style={{ height: `600px`, width: `100vh` }} />}\n          mapElement={<div style={{ height: `100%` }} />}\n        />\n        {/* {(this.state.showMap) ? <MapContainer lat = {this.state.chosenLat} long = {this.state.chosenLong}></MapContainer>: ''} */}\n      </div>\n    );\n  }\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}