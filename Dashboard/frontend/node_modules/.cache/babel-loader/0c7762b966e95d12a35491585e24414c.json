{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js\";\nimport React from \"react\";\nimport { Marker } from \"react-google-maps\"; // import StethoscopeIcon from \"../stethoscopeIcon.png\";\n\nimport dot from \"../image/dot.png\";\nimport { InfoWindow } from 'react-google-maps';\nimport { Jumbotron, Button, Dropdown, Table, Tab, Row, Col, Nav } from 'react-bootstrap';\nexport default class Mark extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + hostName.hostName, {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n    }).catch(console.log);\n  }\n\n  onToggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  getServiceType(hostName) {// const serverTable = data.map((server) => \n    //       <tr>\n    //             <td>server</td>\n    //           </tr>);\n    //           return serverTable;\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: dot,\n      onClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.host), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Server Type\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js"],"names":["React","Marker","dot","InfoWindow","Jumbotron","Button","Dropdown","Table","Tab","Row","Col","Nav","Mark","Component","constructor","state","isOpen","onToggle","bind","getServiceType","componentDidMount","fetch","hostName","headers","then","res","json","data","console","log","catch","setState","render","props","location","host"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,EAAsCC,KAAtC,EAA6CC,GAA7C,EAAkDC,GAAlD,EAAuDC,GAAvD,EAA4DC,GAA5D,QAAuE,iBAAvE;AAGA,eAAe,MAAMC,IAAN,SAAmBZ,KAAK,CAACa,SAAzB,CAAmC;AAEhDC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AACDE,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,KAAK,CAAC,sDAAsDC,QAAQ,CAACA,QAAhE,EAA0E;AAAEC,MAAAA,OAAO,EAAE;AAAE,uCAA+B;AAAjC;AAAX,KAA1E,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,KAJH,EAKGG,KALH,CAKSF,OAAO,CAACC,GALjB;AAMD;;AAEDZ,EAAAA,QAAQ,GAAG;AACT,SAAKc,QAAL,CAAc;AAAEf,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,KAAd;AACD;;AAEDG,EAAAA,cAAc,CAACG,QAAD,EAAW,CAEnB;AACA;AACA;AACA;AACA;AACD;;AACLU,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QADvB;AAEE,MAAA,IAAI,EAAEhC,GAFR;AAGE,MAAA,OAAO,EAAE,KAAKe,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKF,KAAL,CAAWC,MAAX,IACC,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKgB,KAAL,CAAWE,IAAf,CAAL,EACE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADF,CANJ,CADF;AAyBD;;AAzD+C","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"../stethoscopeIcon.png\";\nimport dot from \"../image/dot.png\"\nimport { InfoWindow } from 'react-google-maps'\nimport { Jumbotron, Button, Dropdown, Table, Tab, Row, Col, Nav } from 'react-bootstrap'\n\n\nexport default class Mark extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false\n    }\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n  componentDidMount(){\n    fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + hostName.hostName, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        console.log(data)\n      })\n      .catch(console.log)\n  }\n\n  onToggle() {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  getServiceType(hostName) {\n\n        // const serverTable = data.map((server) => \n        //       <tr>\n        //             <td>server</td>\n        //           </tr>);\n        //           return serverTable;\n      }\n  render() {\n    return (\n      <Marker\n        position={this.props.location}\n        icon={dot}\n        onClick={this.onToggle}\n      >\n        {this.state.isOpen &&\n          <InfoWindow onCloseClick={this.onToggle}>\n            <div><b>{this.props.host}</b>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Server Type</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  \n                </tbody>\n              </Table>\n              {/* <this.getServiceType hostName={this.props.hostUri} /> */}\n            </div>\n\n          </InfoWindow>}\n      </Marker>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}