{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/App.js\";\nimport React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar } from 'react-bootstrap';\nimport { thisExpression } from '@babel/types';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: [],\n      chosenSchedulers: []\n    };\n    this.getCommunities = this.getCommunities.bind(this);\n    this.getPschedulers = this.getPschedulers.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8080/groupCommunities', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        groupCommunities: data\n      });\n    }).catch(console.log);\n    fetch('http://localhost:8080/pSchedulerTests', {\n      headers: {\n        'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\"\n      }\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        pSchedulerTests: data\n      });\n    }).catch(console.log);\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map(community => React.createElement(Dropdown.Item, {\n      id: community,\n      key: community,\n      as: Button,\n      onClick: () => {\n        var current = document.getElementById(\"communitiesdropDown\");\n        current.textContent = {\n          community\n        }.community; // changing dropdown name\n\n        this.setState({\n          selectedGroupCommunity: {\n            community\n          }.community\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, community));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, listCommunities);\n  }\n\n  getPschedulers(props) {\n    const pSchedulers = props.pSchedulers;\n    console.log(pSchedulers);\n    const listSchedulers = pSchedulers.map(scheduler => React.createElement(\"label\", {\n      key: scheduler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      className: \"schedulerCheckBox\",\n      id: scheduler,\n      onClick: () => {\n        this.state.chosenSchedulers.push({\n          scheduler\n        });\n        console.log(this.state.chosenSchedulers);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), scheduler));\n    return React.createElement(Dropdown.Menu, {\n      className: \"scrollBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, listSchedulers);\n  }\n\n  render() {\n    return React.createElement(Jumbotron, {\n      className: \"head\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Field Name..\",\n      className: \"searchBarField\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Search..\",\n      className: \"searchBar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"communitiesdropDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Group communities\"), React.createElement(this.getCommunities, {\n      communities: this.state.groupCommunities,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Dropdown, {\n      className: \"dropdownDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Dropdown.Toggle, {\n      variant: \"dark\",\n      id: \"dropdown-basic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"pScheduler Tests\"), React.createElement(this.getPschedulers, {\n      pSchedulers: this.state.pSchedulerTests,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"submitButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\n;\nexport default App;","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/App.js"],"names":["React","Component","logo","Jumbotron","Button","ListGroup","Dropdown","ButtonToolbar","thisExpression","App","constructor","state","groupCommunities","selectedGroupCommunity","pSchedulerTests","chosenSchedulers","getCommunities","bind","getPschedulers","componentDidMount","fetch","headers","then","res","json","data","setState","catch","console","log","props","communities","listCommunities","map","community","current","document","getElementById","textContent","pSchedulers","listSchedulers","scheduler","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../styles/App.css';\nimport logo from \"../image/Logo.png\";\nimport { Jumbotron, Button, ListGroup, Dropdown, ButtonToolbar } from 'react-bootstrap'\nimport { thisExpression } from '@babel/types';\n\n\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      groupCommunities: [],\n      selectedGroupCommunity: \"\",\n      pSchedulerTests: [],\n      chosenSchedulers: []\n    }\n    this.getCommunities = this.getCommunities.bind(this);\n    this.getPschedulers = this.getPschedulers.bind(this);\n  }\n\n  componentDidMount() {\n\n    fetch('http://localhost:8080/groupCommunities', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ groupCommunities: data })\n      })\n      .catch(console.log)\n\n    fetch('http://localhost:8080/pSchedulerTests', { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ pSchedulerTests: data })\n      })\n      .catch(console.log)\n  }\n\n  getCommunities(props) {\n    const communities = props.communities;\n    const listCommunities = communities.map((community) =>\n      <Dropdown.Item  id = {community} key= {community} as={Button}  \n      onClick={() => { \n        var current = document.getElementById(\"communitiesdropDown\");\n        current.textContent = {community}.community; // changing dropdown name\n        this.setState({selectedGroupCommunity : {community}.community})\n       }}>\n        {/* todo onclick */}\n        {community}\n      \n      </Dropdown.Item>\n    );\n    return (\n      <Dropdown.Menu className=\"scrollBox\">{listCommunities}</Dropdown.Menu>\n    );\n  }\n\n  getPschedulers(props) {\n    const pSchedulers = props.pSchedulers;\n    console.log(pSchedulers)\n    const listSchedulers = pSchedulers.map((scheduler) =>\n    <label key={scheduler}>\n      <input type=\"checkbox\" className=\"schedulerCheckBox\" id = {scheduler} onClick={() => { \n        this.state.chosenSchedulers.push({scheduler})\n        console.log(this.state.chosenSchedulers)\n       }}> \n       </input>\n      {scheduler}\n    </label>\n    );\n    return (\n      <Dropdown.Menu className=\"scrollBox\">\n        {listSchedulers}\n      </Dropdown.Menu>\n    );\n  }\n\n\n  render() {\n    return (\n      <Jumbotron className=\"head\">\n        <div>\n          <input type=\"text\" placeholder=\"Field Name..\" className=\"searchBarField\" />\n          <input type=\"text\" placeholder=\"Search..\" className=\"searchBar\" />\n        </div>\n        <div className=\"dropdownDiv\">\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"communitiesdropDown\">\n              Group communities\n            </Dropdown.Toggle>\n            <this.getCommunities communities={this.state.groupCommunities} />\n          </Dropdown>\n\n          <Dropdown className=\"dropdownDiv\">\n            <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\n              pScheduler Tests\n            </Dropdown.Toggle>\n\n            <this.getPschedulers pSchedulers = {this.state.pSchedulerTests}/>\n\n          </Dropdown>\n        </div>\n        <div className=\"submitButton\">\n          <Button variant=\"warning\">Submit</Button>\n        </div>\n      </Jumbotron>\n    );\n  }\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}