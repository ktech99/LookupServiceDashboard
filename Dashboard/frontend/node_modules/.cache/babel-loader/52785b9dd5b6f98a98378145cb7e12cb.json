{"ast":null,"code":"var _jsxFileName = \"/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js\";\nimport React from \"react\";\nimport { Marker } from \"react-google-maps\"; // import StethoscopeIcon from \"../stethoscopeIcon.png\";\n\nimport dot from \"../image/dot.png\";\nimport { InfoWindow } from 'react-google-maps';\nimport { Table } from 'react-bootstrap';\nexport default class Mark extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      server: []\n    };\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  onToggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  getServiceType(hostName) {\n    console.log(hostName); // fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + this.props.hostUri, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n    //   .then(res => res.json())\n    //   .then((data) => {\n    //     this.setState({ server: data })\n    //   })\n    //   .catch(console.log)\n\n    const serverTable = hostName.hostName.map(server => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, server)));\n    return serverTable;\n  }\n\n  render() {\n    return React.createElement(Marker, {\n      position: this.props.location,\n      icon: dot,\n      onClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.state.isOpen && React.createElement(InfoWindow, {\n      onCloseClick: this.onToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.host), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Server Type\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(this.getServiceType, {\n      hostName: this.state.server,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/kartik/Desktop/ls_dashboard/src/components/Mark.js"],"names":["React","Marker","dot","InfoWindow","Table","Mark","Component","constructor","state","isOpen","server","onToggle","bind","getServiceType","setState","hostName","console","log","serverTable","map","render","props","location","host"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,KAAT,QAAsB,iBAAtB;AAGA,eAAe,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AAEhDC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,MAAM,EAAE;AAFG,KAAb;AAIA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDD,EAAAA,QAAQ,GAAG;AACT,SAAKG,QAAL,CAAc;AAAEL,MAAAA,MAAM,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAtB,KAAd;AACD;;AAEDI,EAAAA,cAAc,CAACE,QAAD,EAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EADuB,CAEvB;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAMG,WAAW,GAAGH,QAAQ,CAACA,QAAT,CAAkBI,GAAlB,CAAuBT,MAAD,IACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,MAAL,CADF,CADkB,CAApB;AAIA,WAAOQ,WAAP;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QADvB;AAEE,MAAA,IAAI,EAAEpB,GAFR;AAGE,MAAA,OAAO,EAAE,KAAKS,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,KAAKH,KAAL,CAAWC,MAAX,IACC,oBAAC,UAAD;AAAY,MAAA,YAAY,EAAE,KAAKE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKU,KAAL,CAAWE,IAAf,CAAL,EACE,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,yBAAM,cAAN;AAAqB,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWE,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,CADF,CADF,CANJ,CADF;AAyBD;;AAzD+C","sourcesContent":["import React from \"react\";\nimport { Marker } from \"react-google-maps\";\n// import StethoscopeIcon from \"../stethoscopeIcon.png\";\nimport dot from \"../image/dot.png\"\nimport { InfoWindow } from 'react-google-maps'\nimport { Table } from 'react-bootstrap'\n\n\nexport default class Mark extends React.Component {\n\n  constructor() {\n    super();\n    this.state = {\n      isOpen: false,\n      server: []\n    }\n    this.onToggle = this.onToggle.bind(this);\n    this.getServiceType = this.getServiceType.bind(this);\n  }\n\n  onToggle() {\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  getServiceType(hostName) {\n    console.log(hostName)\n    // fetch('http://localhost:8080/getTypeOfServiceHost?hosts=' + this.props.hostUri, { headers: { 'Access-Control-Allow-Origin': \"http://127.0.0.1:3000\" } })\n    //   .then(res => res.json())\n    //   .then((data) => {\n    //     this.setState({ server: data })\n    //   })\n    //   .catch(console.log)\n\n    const serverTable = hostName.hostName.map((server) =>\n      <tr>\n        <td>{server}</td>\n      </tr>);\n    return serverTable;\n  }\n  render() {\n    return (\n      <Marker\n        position={this.props.location}\n        icon={dot}\n        onClick={this.onToggle}\n      >\n        {this.state.isOpen &&\n          <InfoWindow onCloseClick={this.onToggle}>\n            <div><b>{this.props.host}</b>\n              <Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Server Type</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <this.getServiceType hostName={this.state.server}></this.getServiceType>\n                </tbody>\n              </Table>\n              {/* <this.getServiceType hostName={this.props.hostUri} /> */}\n            </div>\n\n          </InfoWindow>}\n      </Marker>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}